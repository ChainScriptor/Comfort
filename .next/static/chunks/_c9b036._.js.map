{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/sanity/schemaTypes/productType.ts"],"sourcesContent":["import { TrolleyIcon } from \"@sanity/icons\";\r\nimport { defineType } from \"sanity\";\r\nimport { defineField } from \"sanity\";\r\n\r\nexport const productType = defineType({\r\n    name: \"product\",\r\n    title: \"Product\",\r\n    type: \"document\",\r\n    icon: TrolleyIcon,\r\n    fields: [\r\n        defineField({\r\n            name: \"name\",\r\n            title: \"Product Name\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"slug\",\r\n            title: \"Slug\",\r\n            type: \"slug\",\r\n            options: {\r\n                source: \"name\",\r\n                maxLength: 96,\r\n            },\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"images\",\r\n            title: \"Product Images\",\r\n            type: \"array\",\r\n            of: [{ type: \"image\", options: { hotspot: true } }],\r\n        }),\r\n        defineField({\r\n            name: \"intro\",\r\n            title: \"Product Intro\",\r\n            type: \"string\",\r\n        }),\r\n        defineField({\r\n            name: \"description\",\r\n            title: \"Description\",\r\n            type: \"string\",\r\n        }),\r\n        defineField({\r\n            name: 'price',\r\n            title: 'Product Price',\r\n            type: 'number',\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: 'discount',\r\n            title: 'Discount Price',\r\n            type: 'number',\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: 'categories',\r\n            title: 'Categoris',\r\n            type: 'array',\r\n            of: [{ type: 'reference', to: { type: 'category' } }],\r\n        }),\r\n        defineField({\r\n            name: 'stock',\r\n            title: 'Stock',\r\n            type: 'number',\r\n            validation: (Rule) => Rule.min(0),\r\n        }),\r\n        defineField({\r\n            name: 'status',\r\n            title: 'Product Status',\r\n            type: 'string',\r\n            options: {\r\n                list: [\r\n                    { title: 'New', value: 'new' },\r\n                    { title: 'Hot', value: 'hot' },\r\n                    { title: 'Sale', value: 'sale' },\r\n                ],\r\n            },\r\n        }),\r\n        defineField({\r\n            name: 'variant',\r\n            title: 'Product Type',\r\n            type: 'string',\r\n            options: {\r\n                list: [\r\n                    { title: 'NewProducts', value: 'newproducts' },\r\n                    { title: 'ItalianProducts', value: 'italianproducts' },\r\n                    { title: 'CreamsandPastes', value: 'creamsandpastes' },\r\n                    { title: 'MolecularProducts', value: 'molecularproducts' },\r\n                    { title: 'ReadySaucesandSpices', value: 'readysaucesanspices' },\r\n                    { title: 'ImportedCuredMeats', value: 'importedcuredmeats' },\r\n                    { title: 'ItalianFlours', value: 'italianflours' },\r\n                    { title: 'Seafood', value: 'seafood' },\r\n                    { title: 'Meats', value: 'meats' },\r\n                    { title: 'EthnicFood', value: 'ethnicfood' },\r\n                    { title: 'DairyProducts', value: 'dairyproducts' },\r\n                    { title: 'CuredMeats', value: 'curedmeats' },\r\n                    { title: 'GeneralGroceries', value: 'generalgroceries' },\r\n                    { title: 'VegetablesandFruits', value: 'vegetablesandfruits' },\r\n                    { title: 'ButtersandDairy', value: 'buttersanddairy' },\r\n                    { title: 'Pasta', value: 'pasta' },\r\n                    { title: 'SpicesandNuts', value: 'spicesandnuts' },\r\n                    { title: 'Sauces', value: 'sauces' },\r\n                    { title: 'BakeryProducts', value: 'bakeryproducts' },\r\n\r\n                ],\r\n            },\r\n        }),\r\n    ],\r\n    preview: {\r\n        select: {\r\n            title: 'name',\r\n            subtitle: 'price',\r\n            media: 'images',\r\n        },\r\n        prepare(selection) {\r\n            const { title, subtitle, media } = selection;\r\n            const image = media && media[0];\r\n            return {\r\n                title: title,\r\n                subtitle: `$${subtitle}`,\r\n                media: image,\r\n            };\r\n        },\r\n    },\r\n})"],"names":[],"mappings":"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"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/components/HomeTabBar.tsx"],"sourcesContent":["import { productType } from \"@/sanity/schemaTypes/productType\";\r\n\r\n\r\n\r\ninterface Props {\r\n    selectedTab: string;\r\n    onTabSelect: (tab: string) => void;\r\n}\r\n\r\nconst HomeTabBar = ({ selectedTab, onTabSelect }: Props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {productType?.map((item) => (\r\n                    <button></button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeTabBar"],"names":[],"mappings":";;;;AAAA;;;AASA,MAAM,aAAa,CAAC,EAAE,WAAW,EAAE,WAAW,EAAS;IACnD,qBACI,6LAAC;kBACG,cAAA,6LAAC;sBACI,uIAAA,CAAA,cAAW,EAAE,IAAI,CAAC,qBACf,6LAAC;;;;;;;;;;;;;;;AAKrB;KAVM;uCAWS"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/components/ProductGrid.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport HomeTabBar from \"./HomeTabBar\"\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst ProductGrid = () => {\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    return (\r\n        <div className=\"mt-10 flex flex-col items-center\">\r\n            <HomeTabBar selectedTab={selectedTab} onTabSelect={setSelectedTab} />\r\n        </div>\r\n    )\r\n}\r\nexport default ProductGrid"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMA,MAAM,cAAc;;IAChB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,4HAAA,CAAA,UAAU;YAAC,aAAa;YAAa,aAAa;;;;;;;;;;;AAG/D;GAPM;KAAA;uCAQS"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}