{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"context.js","sources":["file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/optimistic/context.ts"],"sourcesContent":["import {createEmptyActor, type ActorRefFrom} from 'xstate'\nimport {createDatasetMutator} from './state/datasetMutator'\n\nexport type MutatorActor = ActorRefFrom<ReturnType<typeof createDatasetMutator>>\nexport type EmptyActor = typeof emptyActor\n\nexport const emptyActor = createEmptyActor()\n\nexport let actor: MutatorActor | EmptyActor = emptyActor\n\nexport const listeners = new Set<() => void>()\n\nexport function isEmptyActor(actor: MutatorActor | EmptyActor): actor is EmptyActor {\n  return actor === emptyActor\n}\n\nexport function setActor(nextActor: MutatorActor): void {\n  actor = nextActor\n  for (const onActorChange of listeners) {\n    onActorChange()\n  }\n}\n"],"names":["emptyActor","createEmptyActor","actor","listeners","Set","isEmptyActor","setActor","nextActor","onActorChange"],"mappings":";;;;;;;;;AAMO,MAAMA,iNAAaC;AAEnB,IAAIC,IAAmCF;AAEjCG,MAAAA,IAAAA,IAAgBC;AAEtB,SAASC,EAAaH,CAAAA;IAC3B,OAAOA,MAAUF;AACnB;AAEO,SAASM,EAASC,CAAAA;IACfA,IAAAA;IACR,KAAA,MAAWC,KAAiBL,EACZK;AAElB;;CAAA,mCAAA","ignoreList":[0]}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"file":"mutations.js","sources":["file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/node_modules/.pnpm/%40sanity%2Btypes%403.68.3_%40types%2Breact%4019.0.1_debug%404.4.0/node_modules/%40sanity/types/lib/index.mjs","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/node_modules/.pnpm/%40sanity%2Butil%403.68.3_%40types%2Breact%4019.0.1_debug%404.4.0/node_modules/%40sanity/util/lib/paths.mjs","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/documents.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/react/useOptimisticActor.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/react/useDocuments.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/randomKey.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/mutations.ts"],"sourcesContent":["function isObject(obj) {\n  return typeof obj == \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction isReference(reference) {\n  return isObject(reference) && typeof reference._ref == \"string\";\n}\nfunction isImage(value) {\n  return isObject(value) && isReference(value.asset) && value.asset._ref.startsWith(\"image-\");\n}\nfunction isCrossDatasetReference(reference) {\n  return isObject(reference) && typeof reference._ref == \"string\" && typeof reference._dataset == \"string\" && typeof reference._projectId == \"string\";\n}\nfunction isSanityDocument(document) {\n  return isObject(document) && typeof document._id == \"string\" && typeof document._type == \"string\";\n}\nfunction isTypedObject(obj) {\n  return isObject(obj) && typeof obj._type == \"string\";\n}\nfunction isKeyedObject(obj) {\n  return isObject(obj) && typeof obj._key == \"string\";\n}\nfunction isValidationErrorMarker(marker) {\n  return marker.level === \"error\";\n}\nfunction isValidationWarningMarker(marker) {\n  return marker.level === \"warning\";\n}\nfunction isValidationInfoMarker(marker) {\n  return marker.level === \"info\";\n}\nfunction isCreateMutation(mutation) {\n  return \"create\" in mutation;\n}\nfunction isCreateIfNotExistsMutation(mutation) {\n  return \"createIfNotExists\" in mutation;\n}\nfunction isCreateOrReplaceMutation(mutation) {\n  return \"createOrReplace\" in mutation;\n}\nfunction isDeleteMutation(mutation) {\n  return \"delete\" in mutation;\n}\nfunction isPatchMutation(mutation) {\n  return \"patch\" in mutation;\n}\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction isRecord$1(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isPortableTextTextBlock(value) {\n  return isRecord$1(value) && typeof value._type == \"string\" && // block types can be named, so expect anything here.\n  Array.isArray(value.children) && value.children.every((child) => isRecord$1(child)) && (\"markDefs\" in value ? Array.isArray(value.markDefs) && value.markDefs.every((def) => isRecord$1(def)) : !0) && (\"style\" in value ? typeof value.style == \"string\" : !0);\n}\nfunction isPortableTextSpan(value) {\n  return isRecord$1(value) && value._type === \"span\" && typeof value.text == \"string\" && (\"marks\" in value ? Array.isArray(value.marks) && value.marks.every((mark) => typeof mark == \"string\") : !0);\n}\nfunction isPortableTextListBlock(value) {\n  return isPortableTextTextBlock(value) && \"listItem\" in value && typeof value.listItem == \"string\" && \"level\" in value && Number.isInteger(value.level);\n}\nfunction isRecord(value) {\n  return !!value && (typeof value == \"object\" || typeof value == \"function\");\n}\nfunction isDocumentSchemaType(type) {\n  if (!isObjectSchemaType(type))\n    return !1;\n  let current = type;\n  for (; current; ) {\n    if (current.name === \"document\")\n      return !0;\n    current = current.type;\n  }\n  return !1;\n}\nfunction isObjectSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"object\" : !1;\n}\nfunction isArraySchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"array\" : !1;\n}\nfunction isArrayOfBlocksSchemaType(type) {\n  return isArraySchemaType(type) && type.of.some((memberType) => isBlockSchemaType(memberType));\n}\nfunction isArrayOfObjectsSchemaType(type) {\n  return isArraySchemaType(type) && type.of.every((memberType) => isObjectSchemaType(memberType));\n}\nfunction isArrayOfPrimitivesSchemaType(type) {\n  return isArraySchemaType(type) && type.of.every((memberType) => isPrimitiveSchemaType(memberType));\n}\nfunction isBooleanSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"boolean\" : !1;\n}\nfunction isStringSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"string\" : !1;\n}\nfunction isNumberSchemaType(type) {\n  return isRecord(type) ? type.jsonType === \"number\" : !1;\n}\nfunction isPrimitiveSchemaType(type) {\n  return isBooleanSchemaType(type) || isStringSchemaType(type) || isNumberSchemaType(type);\n}\nfunction isReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"reference\" || isReferenceSchemaType(type.type));\n}\nfunction isImageSchemaType(type) {\n  return isRecord(type) && (type.name === \"image\" || isImageSchemaType(type.type));\n}\nfunction isFileSchemaType(type) {\n  return isRecord(type) && (type.name === \"file\" || isFileSchemaType(type.type));\n}\nfunction isDeprecatedSchemaType(type) {\n  return isRecord(type) ? typeof type.deprecated < \"u\" : !1;\n}\nfunction isDeprecationConfiguration(type) {\n  return isRecord(type) ? typeof type.deprecated < \"u\" : !1;\n}\nfunction isCrossDatasetReferenceSchemaType(type) {\n  return isRecord(type) && (type.name === \"crossDatasetReference\" || isCrossDatasetReferenceSchemaType(type.type));\n}\nfunction isTitledListValue(item) {\n  return typeof item == \"object\" && item !== null && \"title\" in item && \"value\" in item;\n}\nfunction isSpanSchemaType(type) {\n  return isRecord(type) ? Array.isArray(type.annotations) && Array.isArray(type.decorators) : !1;\n}\nfunction isBlockSchemaType(type) {\n  if (!isRecord(type) || !Array.isArray(type.fields)) return !1;\n  const maybeSpanChildren = type.fields.find(isBlockChildrenObjectField), maybeStyle = type.fields.find(isBlockStyleObjectField), maybeList = type.fields.find(isBlockListObjectField);\n  return isBlockChildrenObjectField(maybeSpanChildren) && isBlockStyleObjectField(maybeStyle) && isBlockListObjectField(maybeList);\n}\nfunction isBlockStyleObjectField(field) {\n  return !isRecord(field) || field.name !== \"style\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockListObjectField(field) {\n  return !isRecord(field) || field.name !== \"listItem\" ? !1 : isRecord(field.type) && field.type.jsonType === \"string\";\n}\nfunction isBlockChildrenObjectField(field) {\n  return !isRecord(field) || field.name !== \"children\" || !isArraySchemaType(field.type) ? !1 : field.type.of.some(isSpanSchemaType);\n}\nfunction defineType(schemaDefinition, defineOptions) {\n  return schemaDefinition;\n}\nfunction defineField(schemaField, defineOptions) {\n  return schemaField;\n}\nfunction defineArrayMember(arrayOfSchema, defineOptions) {\n  return arrayOfSchema;\n}\nfunction typed(input) {\n  return input;\n}\nconst searchStrategies = [\"groqLegacy\", \"textSearch\", \"groq2024\"];\nfunction isSearchStrategy(maybeSearchStrategy) {\n  return searchStrategies.includes(maybeSearchStrategy);\n}\nfunction isSlug(thing) {\n  return isObject(thing) && typeof thing.current == \"string\";\n}\nfunction isCreateSquashedMutation(mutation) {\n  return \"createSquashed\" in mutation;\n}\nfunction isValidationError(node) {\n  return node.level === \"error\";\n}\nfunction isValidationWarning(node) {\n  return node.level === \"warning\";\n}\nfunction isValidationInfo(node) {\n  return node.level === \"info\";\n}\nexport {\n  defineArrayMember,\n  defineField,\n  defineType,\n  isArrayOfBlocksSchemaType,\n  isArrayOfObjectsSchemaType,\n  isArrayOfPrimitivesSchemaType,\n  isArraySchemaType,\n  isBlockChildrenObjectField,\n  isBlockListObjectField,\n  isBlockSchemaType,\n  isBlockStyleObjectField,\n  isBooleanSchemaType,\n  isCreateIfNotExistsMutation,\n  isCreateMutation,\n  isCreateOrReplaceMutation,\n  isCreateSquashedMutation,\n  isCrossDatasetReference,\n  isCrossDatasetReferenceSchemaType,\n  isDeleteMutation,\n  isDeprecatedSchemaType,\n  isDeprecationConfiguration,\n  isDocumentSchemaType,\n  isFileSchemaType,\n  isImage,\n  isImageSchemaType,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  isKeyedObject,\n  isNumberSchemaType,\n  isObjectSchemaType,\n  isPatchMutation,\n  isPortableTextListBlock,\n  isPortableTextSpan,\n  isPortableTextTextBlock,\n  isPrimitiveSchemaType,\n  isReference,\n  isReferenceSchemaType,\n  isSanityDocument,\n  isSearchStrategy,\n  isSlug,\n  isSpanSchemaType,\n  isStringSchemaType,\n  isTitledListValue,\n  isTypedObject,\n  isValidationError,\n  isValidationErrorMarker,\n  isValidationInfo,\n  isValidationInfoMarker,\n  isValidationWarning,\n  isValidationWarningMarker,\n  searchStrategies,\n  typed\n};\n//# sourceMappingURL=index.mjs.map\n","import { isIndexSegment, isKeySegment, isIndexTuple } from \"@sanity/types\";\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, EMPTY_PATH = [], FOCUS_TERMINATOR = \"$\", GROQ_DATA_TYPE_VALUES = [\"true\", \"false\", \"null\"];\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nconst pathsMemo = /* @__PURE__ */ new Map();\nfunction pathFor(path) {\n  if (path.length === 0)\n    return EMPTY_PATH;\n  const asString = toString(path);\n  return pathsMemo.has(asString) ? pathsMemo.get(asString) : (pathsMemo.set(asString, path), Object.freeze(path), path);\n}\nfunction isEqual(path, otherPath) {\n  return path.length === otherPath.length && path.every((segment, i) => isSegmentEqual(segment, otherPath[i]));\n}\nfunction numEqualSegments(path, otherPath) {\n  const length = Math.min(path.length, otherPath.length);\n  for (let i = 0; i < length; i++)\n    if (!isSegmentEqual(path[i], otherPath[i]))\n      return i;\n  return length;\n}\nfunction isSegmentEqual(segmentA, segmentB) {\n  return isKeySegment(segmentA) && isKeySegment(segmentB) ? segmentA._key === segmentB._key : isIndexSegment(segmentA) ? Number(segmentA) === Number(segmentB) : isIndexTuple(segmentA) && isIndexTuple(segmentB) ? segmentA[0] === segmentB[0] && segmentA[1] === segmentB[1] : segmentA === segmentB;\n}\nfunction hasFocus(focusPath, path) {\n  const withoutTerminator = focusPath[focusPath.length - 1] === FOCUS_TERMINATOR ? focusPath.slice(0, -1) : focusPath;\n  return isEqual(withoutTerminator, path);\n}\nfunction hasItemFocus(focusPath, item) {\n  return focusPath.length === 1 && isSegmentEqual(focusPath[0], item);\n}\nfunction isExpanded(segment, focusPath) {\n  const [head, ...tail] = focusPath;\n  return tail.length > 0 && isSegmentEqual(segment, head);\n}\nfunction startsWith(prefix, path) {\n  return prefix.every((segment, i) => isSegmentEqual(segment, path[i]));\n}\nfunction trimLeft(prefix, path) {\n  if (prefix.length === 0 || path.length === 0)\n    return path;\n  const [prefixHead, ...prefixTail] = prefix, [pathHead, ...pathTail] = path;\n  return isSegmentEqual(prefixHead, pathHead) ? pathFor(trimLeft(prefixTail, pathTail)) : path;\n}\nfunction trimRight(suffix, path) {\n  const sufLen = suffix.length, pathLen = path.length;\n  if (sufLen === 0 || pathLen === 0)\n    return path;\n  let i = 0;\n  for (; i < sufLen && i < pathLen && isSegmentEqual(path[pathLen - i - 1], suffix[sufLen - i - 1]); )\n    i++;\n  return pathFor(path.slice(0, pathLen - i));\n}\nfunction trimChildPath(path, childPath) {\n  return startsWith(path, childPath) ? trimLeft(path, childPath) : EMPTY_PATH;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const isHead = i === 0;\n    if (typeof segment == \"number\")\n      return `${target}[${segment}]`;\n    if (typeof segment == \"string\")\n      return isHead ? segment : GROQ_DATA_TYPE_VALUES.includes(segment) ? `${target}[\"${segment}\"]` : `${target}.${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction _resolveKeyedPath(value, path) {\n  if (path.length === 0)\n    return path;\n  const [next, ...rest] = path;\n  if (typeof next == \"number\") {\n    if (!Array.isArray(value) || !(next in value))\n      return [];\n    const item = value[next];\n    return [typeof (item == null ? void 0 : item._key) == \"string\" ? { _key: item._key } : next, ..._resolveKeyedPath(item, rest)];\n  }\n  const nextVal = get(value, [next]);\n  return [next, ..._resolveKeyedPath(nextVal, rest)];\n}\nfunction resolveKeyedPath(value, path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return pathFor(_resolveKeyedPath(value, path));\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(normalizePathSegment);\n}\nfunction normalizePathSegment(segment) {\n  return isIndexSegment(segment) ? normalizeIndexSegment(segment) : isKeySegment(segment) ? normalizeKeySegment(segment) : isIndexTuple(segment) ? normalizeIndexTupleSegment(segment) : segment;\n}\nfunction normalizeIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction normalizeKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction normalizeIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nexport {\n  FOCUS_TERMINATOR,\n  _resolveKeyedPath,\n  fromString,\n  get,\n  hasFocus,\n  hasItemFocus,\n  isEqual,\n  isExpanded,\n  isSegmentEqual,\n  numEqualSegments,\n  pathFor,\n  resolveKeyedPath,\n  startsWith,\n  toString,\n  trimChildPath,\n  trimLeft,\n  trimRight\n};\n//# sourceMappingURL=paths.mjs.map\n","import {DRAFTS_PREFIX} from '@repo/visual-editing-helpers/csm'\n\nexport function isDraftId(id: string): boolean {\n  return id.startsWith(DRAFTS_PREFIX)\n}\n\nexport function getDraftId(id: string): string {\n  return isDraftId(id) ? id : DRAFTS_PREFIX + id\n}\n\nexport function getPublishedId(id: string): string {\n  return isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id\n}\n","import {useCallback, useMemo, useSyncExternalStore} from 'react'\nimport {\n  actor,\n  emptyActor,\n  isEmptyActor,\n  listeners,\n  type EmptyActor,\n  type MutatorActor,\n} from '../optimistic/context'\n\nexport function useOptimisticActor(): MutatorActor | EmptyActor {\n  const subscribe = useCallback((listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }, [])\n\n  const actorRef = useSyncExternalStore(\n    subscribe,\n    () => actor,\n    () => emptyActor,\n  )\n\n  return actorRef\n}\n\nexport function useOptimisticActorReady(): boolean {\n  const actor = useOptimisticActor()\n  return useMemo(() => !isEmptyActor(actor), [actor])\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type {SanityDocument} from '@sanity/client'\nimport {createIfNotExists, patch} from '@sanity/mutate'\nimport {get as getAtPath} from '@sanity/util/paths'\nimport {useCallback} from 'react'\nimport {isEmptyActor, type MutatorActor} from '../optimistic/context'\nimport type {\n  DocumentsGet,\n  DocumentsMutate,\n  OptimisticDocumentPatches,\n  Path,\n  PathValue,\n} from '../optimistic/types'\nimport {getDraftId, getPublishedId} from '../util/documents'\nimport {useOptimisticActor} from './useOptimisticActor'\n\nfunction debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(fn: F, timeout: number): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n\nfunction getDocumentsAndSnapshot<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  const inFrame = window.self !== window.top || window.opener\n\n  if (isEmptyActor(actor) || !inFrame) {\n    throw new Error('The `useDocuments` hook cannot be used in this context')\n  }\n\n  const draftId = getDraftId(id)\n  const publishedId = getPublishedId(id)\n  const documents = actor.getSnapshot().context?.documents\n\n  const draftDoc = documents?.[draftId]\n  const publishedDoc = documents?.[publishedId]\n  const doc = draftDoc || publishedDoc\n\n  if (!doc) {\n    throw new Error(`Document \"${id}\" not found`)\n  }\n\n  // Helper to get the snapshot from the draft document if it exists, otherwise\n  // fall back to the published document\n  const getDocumentSnapshot = () =>\n    (draftDoc.getSnapshot().context?.local || publishedDoc.getSnapshot().context?.local) as\n      | SanityDocument<T>\n      | null\n      | undefined\n\n  const snapshot = getDocumentSnapshot()\n  const snapshotPromise = new Promise<SanityDocument<T> | null>((resolve) => {\n    if (snapshot) {\n      resolve(snapshot)\n    } else {\n      const subscriber = doc.on('ready', (event) => {\n        // Assert type here as the original document mutator machine doesn't\n        // emit a 'ready' event. We provide a custom action to emit it in this\n        // package's internal `createDatasetMutator` function. <3 xstate.\n        const {snapshot} = event as unknown as {snapshot: SanityDocument<T> | null | undefined}\n        resolve(snapshot || null)\n        subscriber.unsubscribe()\n      })\n    }\n  })\n\n  const getSnapshot = () => snapshotPromise\n\n  return {\n    draftDoc,\n    draftId,\n    getSnapshot,\n    publishedDoc,\n    publishedId,\n    /**\n     * @deprecated - use `getSnapshot` instead\n     */\n    get snapshot() {\n      // Maintain original error throwing behaviour, to avoid breaking changes\n      if (!snapshot) {\n        throw new Error(`Snapshot for document \"${id}\" not found`)\n      }\n      return snapshot\n    },\n  }\n}\n\nfunction createDocumentCommit<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  return (): void => {\n    const {draftDoc} = getDocumentsAndSnapshot<T>(id, actor)\n    draftDoc.send({type: 'submit'})\n  }\n}\n\n/**\n * @deprecated - superseded by `createDocumentGetSnapshot`\n */\nfunction createDocumentGet<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  return <P extends Path<T, keyof T>>(\n    path?: P,\n  ): PathValue<T, P> | SanityDocument<T> | undefined => {\n    const {snapshot} = getDocumentsAndSnapshot<T>(id, actor)\n\n    return path\n      ? (getAtPath(snapshot, path) as PathValue<T, P>)\n      : (snapshot as unknown as SanityDocument<T>)\n  }\n}\n\nfunction createDocumentGetSnapshot<T extends Record<string, any>>(\n  id: string,\n  actor: MutatorActor,\n): () => Promise<SanityDocument<T> | null> {\n  const {getSnapshot} = getDocumentsAndSnapshot<T>(id, actor)\n  return getSnapshot\n}\n\nfunction createDocumentPatch<T extends Record<string, any>>(id: string, actor: MutatorActor) {\n  return async (\n    patches: OptimisticDocumentPatches<T>,\n    options?: {commit?: boolean | {debounce: number}},\n  ): Promise<void> => {\n    // Destructure the function result in two steps as we need access to the\n    // `result.snapshot` property in the getter, but don't want to execute the\n    // getter prematurely as it may throw\n    const result = getDocumentsAndSnapshot<T>(id, actor)\n    const {draftDoc, draftId, getSnapshot, publishedId} = result\n\n    const {commit = true} = options || {}\n\n    const context = {\n      draftId,\n      publishedId,\n      /**\n       * @deprecated - use `getSnapshot` instead\n       */\n      get snapshot() {\n        return result.snapshot\n      },\n      getSnapshot,\n    }\n\n    const resolvedPatches = await (typeof patches === 'function' ? patches(context) : patches)\n\n    const _snapshot = await getSnapshot()\n\n    if (!_snapshot) {\n      throw new Error(`Snapshot for document \"${id}\" not found`)\n    }\n\n    draftDoc.send({\n      type: 'mutate',\n      mutations: [\n        // Attempt to create the draft document, it might not exist if the\n        // snapshot was from the published document\n        createIfNotExists({..._snapshot, _id: draftId}),\n        // Patch the draft document with the resolved patches\n        patch(draftId, resolvedPatches),\n      ],\n    })\n\n    if (commit) {\n      if (typeof commit === 'object' && 'debounce' in commit) {\n        const debouncedCommit = debounce(() => draftDoc.send({type: 'submit'}), commit.debounce)\n        debouncedCommit()\n      } else {\n        draftDoc.send({type: 'submit'})\n      }\n    }\n  }\n}\n\nexport function useDocuments(): {\n  getDocument: DocumentsGet\n  mutateDocument: DocumentsMutate\n} {\n  const actor = useOptimisticActor() as MutatorActor\n\n  const getDocument: DocumentsGet = useCallback(\n    <T extends Record<string, any>>(documentId: string) => {\n      return {\n        id: documentId,\n        commit: createDocumentCommit(documentId, actor),\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - Type instantiation is excessively deep and possibly infinite.\n        get: createDocumentGet(documentId, actor),\n        getSnapshot: createDocumentGetSnapshot<T>(documentId, actor),\n        patch: createDocumentPatch<T>(documentId, actor),\n      }\n    },\n    [actor],\n  )\n\n  const mutateDocument: DocumentsMutate = useCallback(\n    (id, mutations, options) => {\n      const {draftDoc} = getDocumentsAndSnapshot(id, actor)\n      const {commit = true} = options || {}\n\n      draftDoc.send({\n        type: 'mutate',\n        mutations: mutations,\n      })\n\n      if (commit) {\n        if (typeof commit === 'object' && 'debounce' in commit) {\n          const debouncedCommit = debounce(() => draftDoc.send({type: 'submit'}), commit.debounce)\n          debouncedCommit()\n        } else {\n          draftDoc.send({type: 'submit'})\n        }\n      }\n    },\n    [actor],\n  )\n\n  return {getDocument, mutateDocument}\n}\n","import getRandomValues from 'get-random-values-esm'\n\n// WHATWG crypto RNG - https://w3c.github.io/webcrypto/Overview.html\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length)\n  getRandomValues(rnds8)\n  return rnds8\n}\n\nconst getByteHexTable = (() => {\n  let table: string[]\n  return () => {\n    if (table) {\n      return table\n    }\n    table = []\n    for (let i = 0; i < 256; ++i) {\n      table[i] = (i + 0x100).toString(16).slice(1)\n    }\n    return table\n  }\n})()\n\nexport function randomKey(length?: number): string {\n  const table = getByteHexTable()\n  return whatwgRNG(length)\n    .reduce((str, n) => str + table[n], '')\n    .slice(0, length)\n}\n","import type {SanityNode} from '@repo/visual-editing-helpers'\nimport type {SanityDocument} from '@sanity/client'\nimport {at, insert, truncate, type NodePatchList} from '@sanity/mutate'\nimport {get} from '@sanity/util/paths'\nimport type {OptimisticDocument} from '../optimistic/types'\nimport {randomKey} from './randomKey'\n\nexport function getArrayItemKeyAndParentPath(pathOrNode: string | SanityNode): {\n  path: string\n  key: string\n  hasExplicitKey: boolean\n} {\n  const elementPath = typeof pathOrNode === 'string' ? pathOrNode : pathOrNode.path\n\n  const lastDotIndex = elementPath.lastIndexOf('.')\n  const lastPathItem = elementPath.substring(lastDotIndex + 1, elementPath.length)\n\n  if (!lastPathItem.indexOf('[')) throw new Error('Invalid path: not an array')\n\n  const lastArrayIndex = elementPath.lastIndexOf('[')\n  const path = elementPath.substring(0, lastArrayIndex)\n\n  let key\n  let hasExplicitKey\n\n  if (lastPathItem.includes('_key')) {\n    // explicit [_key=\"...\"]\n\n    const startIndex = lastPathItem.indexOf('\"') + 1\n    const endIndex = lastPathItem.indexOf('\"', startIndex)\n\n    key = lastPathItem.substring(startIndex, endIndex)\n\n    hasExplicitKey = true\n  } else {\n    // indexes [int]\n    const startIndex = lastPathItem.indexOf('[') + 1\n    const endIndex = lastPathItem.indexOf(']', startIndex)\n\n    key = lastPathItem.substring(startIndex, endIndex)\n\n    hasExplicitKey = false\n  }\n\n  if (!path || !key) throw new Error('Invalid path')\n\n  return {\n    path,\n    key,\n    hasExplicitKey,\n  }\n}\n\nexport function getArrayDuplicatePatches(\n  node: SanityNode,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  snapshot: SanityDocument<Record<string, any>>,\n  position: 'before' | 'after' = 'after',\n): NodePatchList {\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n\n  const item = get(snapshot, node.path) as object\n  const duplicate = {...item, _key: randomKey()}\n\n  return [at(arrayPath, insert(duplicate, position, {_key: itemKey}))]\n}\n\nexport function getArrayRemovePatches(\n  node: SanityNode,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  snapshot: SanityDocument<Record<string, any>>,\n): NodePatchList {\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n  const array = get(snapshot, arrayPath) as {_key: string}[]\n  const currentIndex = array.findIndex((item) => item._key === itemKey)\n  return [at(arrayPath, truncate(currentIndex, currentIndex + 1))]\n}\n\nexport function getArrayInsertPatches(\n  node: SanityNode,\n  insertType: string,\n  position: 'before' | 'after',\n): NodePatchList {\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n  const insertKey = randomKey()\n  const referenceItem = {_key: itemKey}\n  return [at(arrayPath, insert([{_type: insertType, _key: insertKey}], position, referenceItem))]\n}\n\nexport async function getArrayMovePatches(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  moveTo: 'previous' | 'next' | 'first' | 'last',\n): Promise<NodePatchList> {\n  if (!node.type) throw new Error('Node type is missing')\n  const {path: arrayPath, key: itemKey} = getArrayItemKeyAndParentPath(node)\n\n  const snapshot = await doc.getSnapshot()\n  const array = get(snapshot, arrayPath) as {_key: string}[]\n  const item = get(snapshot, node.path)\n  const currentIndex = array.findIndex((item) => item._key === itemKey)\n\n  let nextIndex = -1\n  let position: 'before' | 'after' = 'before'\n\n  if (moveTo === 'first') {\n    if (currentIndex === 0) return []\n    nextIndex = 0\n    position = 'before'\n  } else if (moveTo === 'last') {\n    if (currentIndex === array.length - 1) return []\n    nextIndex = -1\n    position = 'after'\n  } else if (moveTo === 'next') {\n    if (currentIndex === array.length - 1) return []\n    nextIndex = currentIndex\n    position = 'after'\n  } else if (moveTo === 'previous') {\n    if (currentIndex === 0) return []\n    nextIndex = currentIndex - 1\n    position = 'before'\n  }\n\n  return [\n    at(arrayPath, truncate(currentIndex, currentIndex + 1)),\n    at(arrayPath, insert(item, position, nextIndex)),\n  ]\n}\n"],"names":["c","createIfNotExists","patch","at","insert","truncate","emptyActor","actor","listeners","isEmptyActor","DRAFTS_PREFIX","useSyncExternalStore","getRandomValues","reKeySegment","reIndexTuple","isIndexSegment","segment","test","isKeySegment","trim","rePropName","get","obj","path","defaultVal","select","Error","segments","match","map","normalizePathSegment","fromString","Array","isArray","acc","i","length","find","item","_key","Number","replace","normalizeIndexSegment","normalizeKeySegment","from","to","isIndexTuple","split","seg","normalizeIndexTupleSegment","isDraftId","id","startsWith","getDraftId","getPublishedId","slice","useOptimisticActor","_temp","_temp2","_temp3","listener","add","delete","useOptimisticActorReady","t0","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","getDocumentsAndSnapshot","inFrame","window","self","top","opener","draftId","publishedId","documents","getSnapshot","context","draftDoc","publishedDoc","doc","snapshot","local","snapshotPromise","Promise","resolve","subscriber","on","event","unsubscribe","createDocumentCommit","send","type","createDocumentGet","getAtPath","createDocumentGetSnapshot","createDocumentPatch","async","patches","options","result","commit","resolvedPatches","_snapshot","mutations","_id","useDocuments","$","_c","documentId","getDocument","t1","t2","undefined","mutateDocument","getByteHexTable","table","toString","randomKey","rnds8","Uint8Array","whatwgRNG","reduce","str","n","getArrayItemKeyAndParentPath","pathOrNode","elementPath","lastDotIndex","lastIndexOf","lastPathItem","substring","indexOf","lastArrayIndex","key","hasExplicitKey","includes","startIndex","endIndex","getArrayDuplicatePatches","node","position","arrayPath","itemKey","duplicate","getArrayRemovePatches","currentIndex","findIndex","getArrayInsertPatches","insertType","insertKey","_type","getArrayMovePatches","moveTo","array","nextIndex"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6]}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"file":"SharedStateContext.js","sources":["file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/react/useOptimistic.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/node_modules/.pnpm/uuid%4011.0.3/node_modules/uuid/dist/esm-browser/stringify.js","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/node_modules/.pnpm/uuid%4011.0.3/node_modules/uuid/dist/esm-browser/rng.js","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/node_modules/.pnpm/uuid%4011.0.3/node_modules/uuid/dist/esm-browser/native.js","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/node_modules/.pnpm/uuid%4011.0.3/node_modules/uuid/dist/esm-browser/v4.js","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/geometry.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/dragAndDrop.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/elements.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/stega.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/findSanityNodes.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/controller.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/shared-state/SharedStateContext.ts"],"sourcesContent":["import type {SanityDocument} from '@sanity/types'\nimport {startTransition, useEffect, useState} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\nimport {isEmptyActor} from '../optimistic/context'\nimport type {OptimisticReducer, OptimisticReducerAction} from '../optimistic/types'\nimport {getPublishedId} from '../util/documents'\nimport {useOptimisticActor} from './useOptimisticActor'\n\nexport function useOptimistic<T, U = SanityDocument>(\n  passthrough: T,\n  reducer: OptimisticReducer<T, U> | Array<OptimisticReducer<T, U>>,\n): T {\n  const [pristine, setPristine] = useState(true)\n  const [optimistic, setOptimistic] = useState<T>(passthrough)\n  const [lastEvent, setLastEvent] = useState<OptimisticReducerAction<U> | null>(null)\n  const [lastPassthrough, setLastPassthrough] = useState<T>(passthrough)\n\n  const actor = useOptimisticActor()\n\n  /**\n   * This action is used in two `useEffect` hooks, it needs access to the provided `reducer`,\n   * but doesn't want to cause re-renders if `reducer` changes identity.\n   * The `useEffectEvent` hook ensures that the `reducer` value is never stale when used, and doesn't trigger setup and teardown of\n   * `useEffect` deps to make it happen.\n   */\n  const reduceStateFromAction = useEffectEvent(\n    (action: OptimisticReducerAction<U>, prevState: T) => {\n      const reducers = Array.isArray(reducer) ? reducer : [reducer]\n      return reducers.reduce(\n        (acc, reducer) =>\n          reducer(acc, {\n            document: action.document,\n            id: getPublishedId(action.id),\n            originalId: action.id,\n            type: action.type,\n          }),\n        prevState,\n      )\n    },\n  )\n\n  /**\n   * Records the last passthrough value when reducers ran in response to a rebased event.\n   * This allows us to later know when reducers should run should the passthrough change.\n   */\n  const updateLastPassthrough = useEffectEvent(() => setLastPassthrough(passthrough))\n\n  /**\n   * Handle rebase events, which runs the provided reducers,\n   * caches the event that was used to produce the new state,\n   * and marks the state as non-pristine.\n   */\n  useEffect(() => {\n    // If the actor hasn't been set yet, we don't need to subscribe to mutations\n    if (isEmptyActor(actor)) {\n      return\n    }\n\n    /**\n     * The pristine event fires much too soon, so the temporary workaround is that we greatly delay firing `setPristine(true)`,\n     * and instead relying on re-running reducers with the last event whenever the passthrough changes, to preserve the optimistic state,\n     * until we hopefully have eventual consistency on the passthrough.\n     */\n    let pristineTimeout: ReturnType<typeof setTimeout>\n\n    const rebasedSub = actor.on('rebased.local', (_event) => {\n      const event = {\n        // @todo You shall not cast\n        document: _event.document as U,\n        id: _event.id,\n        originalId: getPublishedId(_event.id),\n        // @todo This should eventually be emitted by the state machine\n        type: 'mutate' as const,\n      }\n      setOptimistic((prevState) => reduceStateFromAction(event, prevState))\n      setLastEvent(event)\n      updateLastPassthrough()\n      setPristine(false)\n\n      clearTimeout(pristineTimeout)\n    })\n    const pristineSub = actor.on('pristine', () => {\n      pristineTimeout = setTimeout(() => {\n        // Marking it in a startTransition allows react to interrupt the resulting render, should a new rebase happen and we're back to dirty\n        startTransition(() => setPristine(true))\n      }, 15000)\n    })\n    return () => {\n      rebasedSub.unsubscribe()\n      pristineSub.unsubscribe()\n    }\n  }, [actor, reduceStateFromAction, updateLastPassthrough])\n\n  /**\n   * If the passthrough changes, and we are in a dirty state, we rerun the reducers with the new passthrough but the previous event.\n   * Marking it in a transition allows react to interrupt this render should a new action happen, or should we be back in a pristine state.\n   */\n  useEffect(() => {\n    if (pristine) {\n      // if we are pristine, then we will passthrough anyway\n      return undefined\n    }\n    if (!lastEvent) {\n      // If we don't have a lastEvent when we are pristine, it's a fatal error\n      throw new Error('No last event found when syncing passthrough')\n    }\n    if (lastPassthrough === passthrough) {\n      // If the passthrough hasn't changed, then we don't need to rerun the reducers\n      return undefined\n    }\n\n    // Marking it in a startTransition allows react to interrupt the resulting render, should a new rebase happen\n    startTransition(() => {\n      setOptimistic(reduceStateFromAction(lastEvent, passthrough))\n      setLastPassthrough(passthrough)\n    })\n  }, [lastEvent, lastPassthrough, passthrough, pristine, reduceStateFromAction])\n\n  return pristine ? passthrough : optimistic\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)();\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import type {OverlayRect, Point2D, Ray2D} from '../types'\n\nexport function getRect(element: Element): OverlayRect {\n  const domRect = element.getBoundingClientRect()\n\n  const rect = {\n    x: domRect.x + scrollX,\n    y: domRect.y + scrollY,\n    w: domRect.width,\n    h: domRect.height,\n  }\n\n  return rect\n}\n\nexport function offsetRect(rect: OverlayRect, px: number, axis: 'x' | 'y'): OverlayRect {\n  if (axis === 'x') {\n    return {\n      x: rect.x + px,\n      y: rect.y,\n      w: rect.w - 2 * px,\n      h: rect.h,\n    }\n  } else {\n    return {\n      x: rect.x,\n      y: rect.y + px,\n      w: rect.w,\n      h: rect.h - 2 * px,\n    }\n  }\n}\n\n// Ref http://paulbourke.net/geometry/pointlineplane/\nexport function rayIntersect(l1: Ray2D, l2: Ray2D): Point2D | false {\n  const {x1, y1, x2, y2} = l1\n  const {x1: x3, y1: y3, x2: x4, y2: y4} = l2\n\n  // Check if none of the lines are of length 0\n  if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\n    return false\n  }\n\n  const denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1)\n\n  // Lines are parallel\n  if (denominator === 0) {\n    return false\n  }\n\n  const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\n  const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\n\n  // is the intersection along the segments\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n    return false\n  }\n\n  const x = x1 + ua * (x2 - x1)\n  const y = y1 + ua * (y2 - y1)\n\n  return {x, y}\n}\n\nexport function rectEqual(r1: OverlayRect, r2: OverlayRect): boolean {\n  return r1.x === r2.x && r1.y === r2.y && r1.w === r2.w && r1.h === r2.h\n}\n\nexport function rayRectIntersections(line: Ray2D, rect: OverlayRect): Array<Point2D> | false {\n  const rectLines: Array<Ray2D> = [\n    {x1: rect.x, y1: rect.y, x2: rect.x + rect.w, y2: rect.y},\n    {\n      x1: rect.x + rect.w,\n      y1: rect.y,\n      x2: rect.x + rect.w,\n      y2: rect.y + rect.h,\n    },\n    {\n      x1: rect.x + rect.w,\n      y1: rect.y + rect.h,\n      x2: rect.x,\n      y2: rect.y + rect.h,\n    },\n    {\n      x1: rect.x,\n      y1: rect.y + rect.h,\n      x2: rect.x,\n      y2: rect.y,\n    },\n  ]\n\n  const intersections: Array<Point2D> = []\n\n  for (let i = 0; i < rectLines.length; i++) {\n    const intersection = rayIntersect(line, rectLines[i])\n\n    if (intersection) {\n      let isDuplicate = false\n\n      for (let j = 0; j < intersections.length; j++) {\n        if (intersections[j].x === intersection.x && intersections[j].y === intersection.y) {\n          isDuplicate = true\n        }\n      }\n\n      if (!isDuplicate) intersections.push(intersection)\n    }\n  }\n\n  if (intersections.length === 0) {\n    return false\n  }\n\n  return intersections.sort(\n    (a, b) => pointDist(a, {x: line.x1, y: line.y1}) - pointDist(b, {x: line.x1, y: line.y1}),\n  )\n}\nexport function pointDist(p1: Point2D, p2: Point2D): number {\n  const a = p1.x - p2.x\n  const b = p1.y - p2.y\n\n  return Math.sqrt(a * a + b * b)\n}\n\nexport function pointInBounds(point: Point2D, bounds: OverlayRect): boolean {\n  const withinX = point.x >= bounds.x && point.x <= bounds.x + bounds.w\n  const withinY = point.y >= bounds.y && point.y <= bounds.y + bounds.h\n\n  return withinX && withinY\n}\n\nexport function findClosestIntersection(\n  ray: Ray2D,\n  targets: OverlayRect[],\n  flow: string,\n): OverlayRect | null {\n  const rayOrigin = {\n    x: ray.x1,\n    y: ray.y1,\n  }\n\n  // Offset rects to ensure raycasting works when siblings touch\n  if (\n    targets.some((t) =>\n      pointInBounds(\n        rayOrigin,\n        offsetRect(t, Math.min(t.w, t.h) / 10, flow === 'horizontal' ? 'x' : 'y'),\n      ),\n    )\n  )\n    return null\n  let closestIntersection\n  let closestRect\n\n  for (const target of targets) {\n    const intersections = rayRectIntersections(\n      ray,\n      offsetRect(target, Math.min(target.w, target.h) / 10, flow === 'horizontal' ? 'x' : 'y'),\n    )\n    if (intersections) {\n      const firstIntersection = intersections[0]\n\n      if (closestIntersection) {\n        if (pointDist(rayOrigin, firstIntersection) < pointDist(rayOrigin, closestIntersection)) {\n          closestIntersection = firstIntersection\n          closestRect = target\n        }\n      } else {\n        closestIntersection = firstIntersection\n        closestRect = target\n      }\n    }\n  }\n\n  if (closestRect) return closestRect\n\n  return null\n}\n\nexport function scaleRect(\n  rect: OverlayRect,\n  scale: number,\n  origin: {x: number; y: number},\n): OverlayRect {\n  const {x, y, w, h} = rect\n  const {x: originX, y: originY} = origin\n\n  const newX = originX + (x - originX) * scale\n  const newY = originY + (y - originY) * scale\n\n  const newWidth = w * scale\n  const newHeight = h * scale\n\n  return {\n    x: newX,\n    y: newY,\n    w: newWidth,\n    h: newHeight,\n  }\n}\n\nexport function getRectGroupXExtent(rects: OverlayRect[]): {\n  min: number\n  max: number\n  width: number\n} {\n  const minGroupX = Math.max(0, Math.min(...rects.map((r) => r.x)))\n  const maxGroupX = Math.min(document.body.offsetWidth, Math.max(...rects.map((r) => r.x + r.w)))\n\n  return {\n    min: minGroupX,\n    max: maxGroupX,\n    width: maxGroupX - minGroupX,\n  }\n}\n\nexport function getRectGroupYExtent(rects: OverlayRect[]): {\n  min: number\n  max: number\n  height: number\n} {\n  const minGroupY = Math.max(0, Math.min(...rects.map((r) => r.y)))\n  const maxGroupY = Math.min(document.body.scrollHeight, Math.max(...rects.map((r) => r.y + r.h)))\n\n  return {\n    min: minGroupY,\n    max: maxGroupY,\n    height: maxGroupY - minGroupY,\n  }\n}\n","import type {\n  DragInsertPosition,\n  DragInsertPositionRects,\n  ElementNode,\n  OverlayElement,\n  OverlayEventHandler,\n  OverlayRect,\n  Point2D,\n  SanityNode,\n} from '../types'\nimport {\n  findClosestIntersection,\n  getRect,\n  getRectGroupXExtent,\n  getRectGroupYExtent,\n  pointDist,\n  rectEqual,\n  scaleRect,\n} from './geometry'\n\nfunction calcTargetFlow(targets: OverlayRect[]) {\n  if (\n    targets.some((t1) => {\n      const others = targets.filter((t2) => !rectEqual(t1, t2))\n\n      return others.some((t2) => {\n        return t1.y === t2.y\n      })\n    })\n  ) {\n    return 'horizontal'\n  } else {\n    return 'vertical'\n  }\n}\n\nfunction calcInsertPosition(origin: Point2D, targets: OverlayRect[], flow: string) {\n  if (flow === 'horizontal') {\n    const rayLeft = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x - 100_000_000,\n      y2: origin.y,\n    }\n\n    const rayRight = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x + 100_000_000,\n      y2: origin.y,\n    }\n\n    return {\n      left: findClosestIntersection(rayLeft, targets, flow),\n      right: findClosestIntersection(rayRight, targets, flow),\n    }\n  } else {\n    const rayTop = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x,\n      y2: origin.y - 100_000_000,\n    }\n\n    const rayBottom = {\n      x1: origin.x,\n      y1: origin.y,\n      x2: origin.x,\n      y2: origin.y + 100_000_000,\n    }\n\n    return {\n      top: findClosestIntersection(rayTop, targets, flow),\n      bottom: findClosestIntersection(rayBottom, targets, flow),\n    }\n  }\n}\n\nfunction findRectSanityData(rect: OverlayRect, overlayGroup: OverlayElement[]) {\n  return overlayGroup.find((e) => rectEqual(getRect(e.elements.element), rect))\n    ?.sanity as SanityNode\n}\n\nfunction resolveInsertPosition(\n  overlayGroup: OverlayElement[],\n  insertPosition: DragInsertPositionRects,\n  flow: string,\n): DragInsertPosition {\n  if (Object.values(insertPosition).every((v) => v === null)) return null\n\n  if (flow === 'horizontal') {\n    return {\n      left: insertPosition.left\n        ? {\n            rect: insertPosition.left,\n            sanity: findRectSanityData(insertPosition.left, overlayGroup),\n          }\n        : null,\n      right: insertPosition.right\n        ? {\n            rect: insertPosition.right,\n            sanity: findRectSanityData(insertPosition.right, overlayGroup),\n          }\n        : null,\n    }\n  } else {\n    return {\n      top: insertPosition.top\n        ? {\n            rect: insertPosition.top,\n            sanity: findRectSanityData(insertPosition.top, overlayGroup),\n          }\n        : null,\n      bottom: insertPosition.bottom\n        ? {\n            rect: insertPosition.bottom,\n            sanity: findRectSanityData(insertPosition.bottom, overlayGroup),\n          }\n        : null,\n    }\n  }\n}\n\nfunction calcMousePos(e: MouseEvent) {\n  const bodyBounds = document.body.getBoundingClientRect()\n\n  return {\n    x: Math.max(bodyBounds.x, Math.min(e.clientX, bodyBounds.x + bodyBounds.width)),\n    y: e.clientY + window.scrollY,\n  }\n}\n\nfunction calcMousePosInverseTransform(mousePos: Point2D) {\n  const body = document.body\n  const computedStyle = window.getComputedStyle(body)\n  const transform = computedStyle.transform\n\n  if (transform === 'none') {\n    return {\n      x: mousePos.x,\n      y: mousePos.y,\n    }\n  }\n\n  const matrix = new DOMMatrix(transform)\n  const inverseMatrix = matrix.inverse()\n\n  const point = new DOMPoint(mousePos.x, mousePos.y)\n  const transformedPoint = point.matrixTransform(inverseMatrix)\n\n  return {\n    x: transformedPoint.x,\n    y: transformedPoint.y,\n  }\n}\n\nfunction buildPreviewSkeleton(mousePos: Point2D, element: ElementNode, scaleFactor: number) {\n  const bounds = getRect(element)\n\n  const children = [\n    ...element.querySelectorAll(':where(h1, h2, h3, h4, p, a, img, span, button):not(:has(*))'),\n  ]\n\n  if (mousePos.x <= bounds.x) mousePos.x = bounds.x\n  if (mousePos.x >= bounds.x + bounds.w) mousePos.x = bounds.x + bounds.w\n\n  if (mousePos.y >= bounds.y + bounds.h) mousePos.y = bounds.y + bounds.h\n  if (mousePos.y <= bounds.y) mousePos.y = bounds.y\n\n  const childRects = children.map((child: Element) => {\n    // offset to account for stroke in rendered rects\n    const rect = scaleRect(getRect(child), scaleFactor, {\n      x: bounds.x,\n      y: bounds.y,\n    })\n\n    return {\n      x: rect.x - bounds.x,\n      y: rect.y - bounds.y,\n      w: rect.w,\n      h: rect.h,\n      tagName: child.tagName,\n    }\n  })\n\n  return {\n    offsetX: (bounds.x - mousePos.x) * scaleFactor,\n    offsetY: (bounds.y - mousePos.y) * scaleFactor,\n    w: bounds.w * scaleFactor,\n    h: bounds.h * scaleFactor,\n    maxWidth: bounds.w * scaleFactor * 0.75,\n    childRects,\n  }\n}\n\nconst minDragDelta = 4\n\nasync function applyMinimapWrapperTransform(\n  target: HTMLElement,\n  scaleFactor: number,\n  minYScaled: number,\n  handler: OverlayEventHandler,\n  rectUpdateFrequency: number,\n): Promise<void> {\n  return new Promise((resolve) => {\n    target.addEventListener(\n      'transitionend',\n      () => {\n        setTimeout(() => {\n          handler({\n            type: 'overlay/dragEndMinimapTransition',\n          })\n        }, rectUpdateFrequency * 2)\n\n        resolve()\n      },\n      {once: true},\n    )\n\n    handler({\n      type: 'overlay/dragStartMinimapTransition',\n    })\n\n    handler({\n      type: 'overlay/dragToggleMinimap',\n      display: true,\n    })\n\n    document.body.style.overflow = 'hidden'\n    document.body.style.height = '100%'\n    document.documentElement.style.overflow = 'initial'\n    document.documentElement.style.height = '100%'\n\n    // ensure overflow hidden has applied and scrolling stopped before applying transform, prevent minor y-position transform issues\n    setTimeout(() => {\n      target.style.transformOrigin = '50% 0px'\n      target.style.transition = 'transform 150ms ease'\n      target.style.transform = `translate3d(0px, ${-minYScaled + scrollY}px, 0px) scale(${scaleFactor})`\n    }, 25)\n  })\n}\n\nfunction calcMinimapTransformValues(rects: OverlayRect[], groupHeightOverride: number | null) {\n  let groupHeight = groupHeightOverride || getRectGroupYExtent(rects).height\n\n  const padding = 100 // px\n\n  groupHeight += padding * 2\n\n  const scaleFactor = groupHeight > window.innerHeight ? window.innerHeight / groupHeight : 1\n  const scaledRects = rects.map((r) => scaleRect(r, scaleFactor, {x: window.innerWidth / 2, y: 0}))\n\n  const {min: minYScaled} = getRectGroupYExtent(scaledRects)\n\n  return {\n    scaleFactor,\n    minYScaled: minYScaled - padding * scaleFactor,\n  }\n}\nfunction calcGroupBoundsPreview(rects: OverlayRect[]) {\n  const groupBoundsX = getRectGroupXExtent(rects)\n  const groupBoundsY = getRectGroupYExtent(rects)\n\n  const offsetDist = 8\n\n  const canOffsetX =\n    groupBoundsX.min > offsetDist &&\n    groupBoundsX.min + groupBoundsX.width <= window.innerWidth - offsetDist\n  const canOffsetY =\n    groupBoundsY.min > offsetDist &&\n    groupBoundsY.min + groupBoundsY.height <= document.body.scrollHeight - offsetDist\n  const canOffset = canOffsetX && canOffsetY\n\n  const groupRect = {\n    x: canOffset ? groupBoundsX.min - offsetDist : groupBoundsX.min,\n    y: canOffset ? groupBoundsY.min - offsetDist : groupBoundsY.min,\n    w: canOffset ? groupBoundsX.width + offsetDist * 2 : groupBoundsX.width,\n    h: canOffset ? groupBoundsY.height + offsetDist * 2 : groupBoundsY.height,\n  }\n\n  return groupRect\n}\n\nasync function resetMinimapWrapperTransform(\n  endYOrigin: number,\n  target: HTMLElement,\n  prescaleHeight: number,\n  handler: OverlayEventHandler,\n  rectUpdateFrequency: number,\n  previousRootStyleValues: PreviousRootStyleValues | null,\n): Promise<void> {\n  return new Promise((resolve) => {\n    const computedStyle = window.getComputedStyle(target)\n    const transform = computedStyle.transform\n\n    const matrix = new DOMMatrix(transform)\n\n    const scale = matrix.a\n\n    if (scale === 1) return\n\n    const maxScroll = prescaleHeight - window.innerHeight\n    const prevScrollY = scrollY\n\n    endYOrigin -= window.innerHeight / 2\n\n    if (endYOrigin < 0) endYOrigin = 0\n\n    target.addEventListener(\n      'transitionend',\n      () => {\n        target.style.transition = `none`\n        target.style.transform = `none`\n\n        scrollTo({\n          top: endYOrigin,\n          behavior: 'instant',\n        })\n\n        setTimeout(() => {\n          handler({\n            type: 'overlay/dragEndMinimapTransition',\n          })\n\n          handler({\n            type: 'overlay/dragToggleMinimap',\n            display: false,\n          })\n        }, rectUpdateFrequency * 2)\n\n        resolve()\n      },\n      {once: true},\n    )\n\n    handler({\n      type: 'overlay/dragStartMinimapTransition',\n    })\n\n    target.style.transform = `translateY(${Math.max(prevScrollY - endYOrigin, -maxScroll + prevScrollY)}px) scale(${1})`\n\n    if (!previousRootStyleValues) return\n\n    document.body.style.overflow = previousRootStyleValues.body.overflow\n    document.body.style.height = previousRootStyleValues.body.height\n    document.documentElement.style.overflow = previousRootStyleValues.documentElement.overflow\n    document.documentElement.style.height = previousRootStyleValues.documentElement.height\n  })\n}\n\ninterface PreviousRootStyleValues {\n  body: {\n    overflow: string\n    height: string\n  }\n  documentElement: {\n    overflow: string\n    height: string\n  }\n}\n\ninterface HandleOverlayDragOpts {\n  mouseEvent: MouseEvent\n  element: ElementNode\n  overlayGroup: OverlayElement[]\n  handler: OverlayEventHandler\n  target: SanityNode\n  onSequenceStart: () => void\n  onSequenceEnd: () => void\n}\n\nlet minimapScaleApplied = false\n\nlet mousePosInverseTransform = {x: 0, y: 0}\nlet mousePos = {x: 0, y: 0}\n\nlet prescaleHeight = typeof document === 'undefined' ? 0 : document.documentElement.scrollHeight\n\nlet previousRootStyleValues: PreviousRootStyleValues | null = null\n\nexport function handleOverlayDrag(opts: HandleOverlayDragOpts): void {\n  const {mouseEvent, element, overlayGroup, handler, target, onSequenceStart, onSequenceEnd} = opts\n\n  // do not trigger drag sequence on anything other than \"main\" (0) click, ignore right click, etc\n  if (mouseEvent.button !== 0) return\n\n  // ensure keyboard events fire within frame context\n  window.focus()\n\n  const rectUpdateFrequency = 150\n  let rects = overlayGroup.map((e) => getRect(e.elements.element))\n\n  const flow = (element.getAttribute('data-sanity-drag-flow') || calcTargetFlow(rects)) as\n    | 'horizontal'\n    | 'vertical'\n\n  const dragGroup = element.getAttribute('data-sanity-drag-group')\n\n  const disableMinimap = !!element.getAttribute('data-sanity-drag-minimap-disable')\n\n  const preventInsertDefault = !!element.getAttribute('data-sanity-drag-prevent-default')\n\n  const documentHeightOverride = element.getAttribute('data-unstable_sanity-drag-document-height')\n  const groupHeightOverride = element.getAttribute('data-unstable_sanity-drag-group-height')\n\n  let insertPosition: DragInsertPositionRects | null = null\n\n  const initialMousePos = calcMousePos(mouseEvent)\n\n  const scaleTarget = document.body\n\n  const {minYScaled, scaleFactor} = calcMinimapTransformValues(\n    rects,\n    groupHeightOverride ? ~~groupHeightOverride : null,\n  )\n\n  let sequenceStarted = false\n  let minimapPromptShown = false\n\n  let mousedown = true\n\n  if (!minimapScaleApplied) {\n    previousRootStyleValues = {\n      body: {\n        overflow: window.getComputedStyle(document.body).overflow,\n        height: window.getComputedStyle(document.body).height,\n      },\n      documentElement: {\n        overflow: window.getComputedStyle(document.documentElement).overflow,\n        height: window.getComputedStyle(document.documentElement).height,\n      },\n    }\n\n    prescaleHeight = documentHeightOverride\n      ? ~~documentHeightOverride\n      : document.documentElement.scrollHeight\n  }\n\n  const rectsInterval = setInterval(() => {\n    rects = overlayGroup.map((e) => getRect(e.elements.element))\n  }, rectUpdateFrequency)\n\n  const applyMinimap = (): void => {\n    if (scaleFactor >= 1) return\n\n    const skeleton = buildPreviewSkeleton(mousePos, element, scaleFactor)\n\n    handler({\n      type: 'overlay/dragUpdateSkeleton',\n      skeleton,\n    })\n\n    handler({\n      type: 'overlay/dragToggleMinimapPrompt',\n      display: false,\n    })\n\n    handler({\n      type: 'overlay/dragToggleMinimap',\n      display: true,\n    })\n\n    minimapScaleApplied = true\n\n    applyMinimapWrapperTransform(\n      scaleTarget,\n      scaleFactor,\n      minYScaled,\n      handler,\n      rectUpdateFrequency,\n    ).then(() => {\n      setTimeout(() => {\n        handler({\n          type: 'overlay/dragUpdateGroupRect',\n          groupRect: calcGroupBoundsPreview(rects),\n        })\n      }, rectUpdateFrequency * 2)\n    })\n  }\n\n  const handleScroll = (e: WheelEvent) => {\n    if (\n      Math.abs(e.deltaY) >= 10 &&\n      scaleFactor < 1 &&\n      !minimapScaleApplied &&\n      !minimapPromptShown &&\n      !disableMinimap &&\n      mousedown\n    ) {\n      handler({\n        type: 'overlay/dragToggleMinimapPrompt',\n        display: true,\n      })\n\n      minimapPromptShown = true\n    }\n\n    if (e.shiftKey && !minimapScaleApplied && !disableMinimap) {\n      window.dispatchEvent(new CustomEvent('unstable_sanity/dragApplyMinimap'))\n\n      setTimeout(() => {\n        applyMinimap()\n      }, 50)\n    }\n  }\n\n  const handleMouseMove = (e: MouseEvent): void => {\n    e.preventDefault()\n\n    mousePos = calcMousePos(e)\n    mousePosInverseTransform = calcMousePosInverseTransform(mousePos)\n\n    if (Math.abs(pointDist(mousePos, initialMousePos)) < minDragDelta) return\n\n    if (!sequenceStarted) {\n      const groupRect = calcGroupBoundsPreview(rects)\n\n      const skeleton = buildPreviewSkeleton(mousePos, element, 1)\n\n      handler({\n        type: 'overlay/dragStart',\n        flow,\n      })\n\n      handler({\n        type: 'overlay/dragUpdateSkeleton',\n        skeleton,\n      })\n\n      handler({\n        type: 'overlay/dragUpdateGroupRect',\n        groupRect,\n      })\n\n      sequenceStarted = true\n      onSequenceStart()\n    }\n\n    handler({\n      type: 'overlay/dragUpdateCursorPosition',\n      x: mousePos.x,\n      y: mousePos.y,\n    })\n\n    if (e.shiftKey && !minimapScaleApplied && !disableMinimap) {\n      window.dispatchEvent(new CustomEvent('unstable_sanity/dragApplyMinimap'))\n\n      setTimeout(() => {\n        applyMinimap()\n      }, 50)\n    }\n\n    const newInsertPosition = calcInsertPosition(mousePos, rects, flow)\n\n    if (JSON.stringify(insertPosition) !== JSON.stringify(newInsertPosition)) {\n      insertPosition = newInsertPosition\n\n      handler({\n        type: 'overlay/dragUpdateInsertPosition',\n        insertPosition: resolveInsertPosition(overlayGroup, insertPosition, flow),\n      })\n    }\n  }\n\n  const handleMouseUp = (): void => {\n    mousedown = false\n\n    handler({\n      type: 'overlay/dragEnd',\n      target,\n      insertPosition: insertPosition\n        ? resolveInsertPosition(overlayGroup, insertPosition, flow)\n        : null,\n      dragGroup,\n      flow,\n      preventInsertDefault,\n    })\n\n    if (minimapPromptShown) {\n      handler({\n        type: 'overlay/dragToggleMinimapPrompt',\n        display: false,\n      })\n    }\n\n    if (!minimapScaleApplied) {\n      clearInterval(rectsInterval)\n      onSequenceEnd()\n\n      removeFrameListeners()\n      removeKeyListeners()\n    }\n\n    removeMouseListeners()\n  }\n\n  const handleKeyup = (e: KeyboardEvent) => {\n    if (e.key === 'Shift' && minimapScaleApplied) {\n      minimapScaleApplied = false\n\n      const skeleton = buildPreviewSkeleton(mousePos, element, 1 / scaleFactor)\n\n      handler({\n        type: 'overlay/dragUpdateSkeleton',\n        skeleton,\n      })\n\n      window.dispatchEvent(new CustomEvent('unstable_sanity/dragResetMinimap'))\n\n      setTimeout(() => {\n        resetMinimapWrapperTransform(\n          mousePosInverseTransform.y,\n          scaleTarget,\n          prescaleHeight,\n          handler,\n          rectUpdateFrequency,\n          previousRootStyleValues,\n        )\n      }, 50)\n\n      handler({\n        type: 'overlay/dragUpdateGroupRect',\n        groupRect: null,\n      })\n\n      // cleanup keyup after drag sequence is complete\n      if (!mousedown) {\n        clearInterval(rectsInterval)\n\n        removeMouseListeners()\n        removeFrameListeners()\n        removeKeyListeners()\n\n        onSequenceEnd()\n      }\n    }\n  }\n\n  const handleBlur = () => {\n    handler({\n      type: 'overlay/dragUpdateGroupRect',\n      groupRect: null,\n    })\n\n    window.dispatchEvent(new CustomEvent('unstable_sanity/dragResetMinimap'))\n\n    setTimeout(() => {\n      resetMinimapWrapperTransform(\n        mousePosInverseTransform.y,\n        scaleTarget,\n        prescaleHeight,\n        handler,\n        rectUpdateFrequency,\n        previousRootStyleValues,\n      ).then(() => {\n        minimapScaleApplied = false\n      })\n    }, 50)\n\n    clearInterval(rectsInterval)\n\n    removeMouseListeners()\n    removeFrameListeners()\n    removeKeyListeners()\n\n    onSequenceEnd()\n  }\n\n  const removeMouseListeners = () => {\n    window.removeEventListener('mousemove', handleMouseMove)\n    window.removeEventListener('wheel', handleScroll)\n    window.removeEventListener('mouseup', handleMouseUp)\n  }\n\n  const removeKeyListeners = () => {\n    window.removeEventListener('keyup', handleKeyup)\n  }\n\n  const removeFrameListeners = () => {\n    window.removeEventListener('blur', handleBlur)\n  }\n\n  window.addEventListener('blur', handleBlur)\n  window.addEventListener('keyup', handleKeyup)\n  window.addEventListener('wheel', handleScroll)\n  window.addEventListener('mousemove', handleMouseMove)\n  window.addEventListener('mouseup', handleMouseUp)\n}\n","import type {ElementNode} from '../types'\n\nexport const isElementNode = (target: EventTarget | null): target is ElementNode => {\n  return target instanceof HTMLElement || target instanceof SVGElement\n}\n\nexport function findNonInlineElement(element: ElementNode): ElementNode | null {\n  const {display} = window.getComputedStyle(element)\n\n  if (display !== 'inline') return element\n\n  const parent = element.parentElement\n\n  if (!parent) return null\n\n  return findNonInlineElement(parent)\n}\n\nexport const findOverlayElement = (\n  el: EventTarget | ElementNode | null | undefined,\n): ElementNode | null => {\n  if (!el || !isElementNode(el)) {\n    return null\n  }\n\n  if (el.dataset?.['sanityOverlayElement']) {\n    return el\n  }\n\n  return findOverlayElement(el.parentElement)\n}\n","import type {SanityStegaNode} from '@repo/visual-editing-helpers'\nimport {vercelStegaDecode} from '@vercel/stega'\nimport {VERCEL_STEGA_REGEX} from '../constants'\n\n/**\n * JavaScript regexps are stateful. Have to reset lastIndex between runs to ensure consistent behaviour for the same string\n * @param input\n */\nfunction testVercelStegaRegex(input: string): boolean {\n  VERCEL_STEGA_REGEX.lastIndex = 0\n  return VERCEL_STEGA_REGEX.test(input)\n}\n\nfunction decodeStega(str: string, isAltText = false): SanityStegaNode | null {\n  try {\n    const decoded = vercelStegaDecode<SanityStegaNode>(str)\n    if (!decoded || decoded.origin !== 'sanity.io') {\n      return null\n    }\n    if (isAltText) {\n      decoded.href = decoded.href?.replace('.alt', '')\n    }\n    return decoded\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('Failed to decode stega for string: ', str, 'with the original error: ', err)\n    return null\n  }\n}\n\nexport function testAndDecodeStega(str: string, isAltText = false): SanityStegaNode | null {\n  if (testVercelStegaRegex(str)) {\n    return decodeStega(str, isAltText)\n  }\n  return null\n}\n","import {decodeSanityNodeData} from '@repo/visual-editing-helpers/csm'\nimport type {\n  ElementNode,\n  OverlayElement,\n  ResolvedElement,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {findNonInlineElement} from './elements'\nimport {testAndDecodeStega} from './stega'\n\nconst isElementNode = (node: ChildNode): node is ElementNode => node.nodeType === Node.ELEMENT_NODE\n\nconst isImgElement = (el: ElementNode): el is HTMLImageElement => el.tagName === 'IMG'\n\nconst isTimeElement = (el: ElementNode): el is HTMLTimeElement => el.tagName === 'TIME'\n\nconst isSvgRootElement = (el: ElementNode): el is SVGSVGElement =>\n  el.tagName.toUpperCase() === 'SVG'\n\nexport function isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\n/**\n * Finds commonality between two document paths strings\n * @param first First path to compare\n * @param second Second path to compare\n * @returns A common path\n */\nexport function findCommonPath(first: string, second: string): string {\n  let firstParts = first.split('.')\n  let secondParts = second.split('.')\n  const maxLength = Math.min(firstParts.length, secondParts.length)\n  firstParts = firstParts.slice(0, maxLength).reverse()\n  secondParts = secondParts.slice(0, maxLength).reverse()\n\n  return firstParts\n    .reduce((parts, part, i) => (part === secondParts[i] ? [...parts, part] : []), [] as string[])\n    .reverse()\n    .join('.')\n}\n\n/**\n * Returns common Sanity node data from multiple nodes\n * If document paths are present, tries to resolve a common path\n * @param nodes An array of Sanity nodes\n * @returns A single sanity node or undefined\n * @internal\n */\nexport function findCommonSanityData(\n  nodes: (SanityNode | SanityStegaNode)[],\n): SanityNode | SanityStegaNode | undefined {\n  // If there are no nodes, or inconsistent node types\n  if (!nodes.length || !nodes.map((n) => isSanityNode(n)).every((n, _i, arr) => n === arr[0])) {\n    return undefined\n  }\n  // If legacy nodes, return first match (no common pathfinding)\n  if (!isSanityNode(nodes[0])) return nodes[0]\n\n  const sanityNodes = nodes.filter(isSanityNode)\n  let common: SanityNode | undefined = nodes[0]\n\n  const consistentValueKeys: Array<keyof SanityNode> = [\n    'projectId',\n    'dataset',\n    'id',\n    'baseUrl',\n    'workspace',\n    'tool',\n  ]\n  for (let i = 1; i < sanityNodes.length; i++) {\n    const node = sanityNodes[i]\n    if (consistentValueKeys.some((key) => node[key] !== common?.[key])) {\n      common = undefined\n      break\n    }\n\n    common.path = findCommonPath(common.path, node.path)\n  }\n\n  return common\n}\n\n/**\n * Finds nodes containing sanity specific data\n * @param el - A parent element to traverse\n * @returns An array of objects, each containing an HTML element and decoded sanity data\n * @internal\n */\nexport function findSanityNodes(\n  el: ElementNode | ChildNode | {childNodes: Array<ElementNode>},\n): ResolvedElement[] {\n  const elements: ResolvedElement[] = []\n\n  function addElement(element: ElementNode, data: SanityStegaNode | string) {\n    const sanity = decodeSanityNodeData(data)\n    if (!sanity) {\n      return\n    }\n\n    // resize observer does not fire for non-replaced inline elements https://drafts.csswg.org/resize-observer/#intro\n    const measureElement = findNonInlineElement(element)\n    if (!measureElement) {\n      return\n    }\n\n    elements.push({\n      elements: {\n        element,\n        measureElement,\n      },\n      sanity,\n    })\n  }\n\n  if (el) {\n    for (const node of el.childNodes) {\n      const {nodeType, parentElement, textContent} = node\n      // If an edit target is found, find common paths\n      if (isElementNode(node) && node.dataset?.['sanityEditTarget'] !== undefined) {\n        const nodesInTarget = findSanityNodes(node).map(({sanity}) => sanity)\n        // If there are inconsistent node types, continue\n        if (!nodesInTarget.map((n) => isSanityNode(n)).every((n, _i, arr) => n === arr[0])) {\n          continue\n        }\n\n        const commonData = findCommonSanityData(nodesInTarget)\n\n        if (commonData) {\n          elements.push({\n            elements: {\n              element: node,\n              measureElement: node,\n            },\n            sanity: commonData,\n          })\n        }\n\n        // Check non-empty, child-only text nodes for stega strings\n      } else if (nodeType === Node.TEXT_NODE && parentElement && textContent) {\n        const data = testAndDecodeStega(textContent)\n        if (!data) continue\n        addElement(parentElement, data)\n      }\n      // Check element nodes for data attributes, alt tags, etc\n      else if (isElementNode(node)) {\n        // Do not traverse script tags\n        // Do not traverse the visual editing overlay\n        if (node.tagName === 'SCRIPT' || node.tagName === 'SANITY-VISUAL-EDITING') {\n          continue\n        }\n\n        // Prefer elements with explicit data attributes\n        if (node.dataset?.['sanity']) {\n          addElement(node, node.dataset['sanity'])\n        }\n        // Look for legacy sanity data attributes\n        else if (node.dataset?.['sanityEditInfo']) {\n          addElement(node, node.dataset['sanityEditInfo'])\n        } else if (isImgElement(node)) {\n          const data = testAndDecodeStega(node.alt, true)\n          if (!data) continue\n          addElement(node, data)\n          // No need to recurse for img elements\n          continue\n        } else if (isTimeElement(node)) {\n          const data = testAndDecodeStega(node.dateTime, true)\n          if (!data) continue\n          addElement(node, data)\n        } else if (isSvgRootElement(node)) {\n          if (!node.ariaLabel) continue\n          const data = testAndDecodeStega(node.ariaLabel, true)\n          if (!data) continue\n          addElement(node, data)\n        }\n\n        elements.push(...findSanityNodes(node))\n      }\n    }\n  }\n  return elements\n}\n\nexport function isSanityArrayPath(path: string): boolean {\n  const lastDotIndex = path.lastIndexOf('.')\n  const lastPathItem = path.substring(lastDotIndex, path.length)\n\n  return lastPathItem.includes('[')\n}\n\nexport function getSanityNodeArrayPath(path: string): string | null {\n  if (!isSanityArrayPath(path)) return null\n\n  const split = path.split('.')\n\n  split[split.length - 1] = split[split.length - 1].replace(/\\[.*?\\]/g, '[]')\n\n  return split.join('.')\n}\n\nexport function sanityNodesExistInSameArray(\n  sanityNode1: SanityNode,\n  sanityNode2: SanityNode,\n): boolean {\n  if (!isSanityArrayPath(sanityNode1.path) || !isSanityArrayPath(sanityNode2.path)) return false\n\n  return getSanityNodeArrayPath(sanityNode1.path) === getSanityNodeArrayPath(sanityNode2.path)\n}\n\nexport function resolveDragAndDropGroup(\n  element: ElementNode,\n  sanity: SanityNode | SanityStegaNode,\n  elementSet: Set<ElementNode>,\n  elementsMap: WeakMap<ElementNode, OverlayElement>,\n): null | OverlayElement[] {\n  if (!element.getAttribute('data-sanity')) return null\n\n  if (element.getAttribute('data-sanity-drag-disable')) return null\n\n  if (!sanity || !isSanityNode(sanity) || !isSanityArrayPath(sanity.path)) return null\n\n  const targetDragGroup = element.getAttribute('data-sanity-drag-group')\n\n  const group = [...elementSet].reduce<OverlayElement[]>((acc, el) => {\n    const elData = elementsMap.get(el)\n    const elDragDisabled = el.getAttribute('data-sanity-drag-disable')\n    const elDragGroup = el.getAttribute('data-sanity-drag-group')\n    const elHasSanityAttribution = el.getAttribute('data-sanity') !== null\n\n    const sharedDragGroup = targetDragGroup !== null ? targetDragGroup === elDragGroup : true\n\n    if (\n      elData &&\n      !elDragDisabled &&\n      isSanityNode(elData.sanity) &&\n      sanityNodesExistInSameArray(sanity, elData.sanity) &&\n      sharedDragGroup &&\n      elHasSanityAttribution\n    ) {\n      acc.push(elData)\n    }\n\n    return acc\n  }, [])\n\n  if (group.length <= 1) return null\n\n  return group\n}\n","import {v4 as uuid} from 'uuid'\nimport type {\n  ElementNode,\n  EventHandlers,\n  OverlayController,\n  OverlayElement,\n  OverlayOptions,\n  ResolvedElement,\n} from './types'\nimport {handleOverlayDrag} from './util/dragAndDrop'\nimport {findOverlayElement, isElementNode} from './util/elements'\nimport {\n  findSanityNodes,\n  isSanityArrayPath,\n  isSanityNode,\n  resolveDragAndDropGroup,\n} from './util/findSanityNodes'\nimport {getRect} from './util/geometry'\n\n/**\n * Creates a controller which dispatches overlay related events\n *\n * @param handler - Dispatched event handler\n * @param overlayElement - Parent element containing rendered overlay elements\n * @public\n */\nexport function createOverlayController({\n  handler,\n  overlayElement,\n  inFrame,\n  optimisticActorReady,\n}: OverlayOptions): OverlayController {\n  let activated = false\n  // Map for getting element by ID\n  const elementIdMap = new Map<string, ElementNode>()\n  // WeakMap for getting data by element\n  const elementsMap = new WeakMap<ElementNode, OverlayElement>()\n  // Set for iterating over elements\n  const elementSet = new Set<ElementNode>()\n  // Weakmap keyed by measureElement to find associated element\n  const measureElements = new WeakMap<ElementNode, ElementNode>()\n  // Weakmap for storing user set cursor styles per element\n  const cursorMap = new WeakMap<ElementNode, string | undefined>()\n\n  const preventDefault = inFrame\n\n  let ro: ResizeObserver\n  let io: IntersectionObserver | undefined\n  let mo: MutationObserver\n\n  let activeDragSequence = false\n\n  // The `hoverStack` is used as a container for tracking which elements are hovered at any time.\n  // The browser supports hovering multiple nested elements simultanously, but we only want to\n  // highlight the \"outer most\" element.\n  //\n  // This is how it works:\n  // - Whenever the mouse enters an element, we add it to the stack.\n  // - Whenever the mouse leaves an element, we remove it from the stack.\n  //\n  // When we want to know which element is currently hovered, we take the element at the top of the\n  // stack. Since JavaScript does not have a Stack type, we use an array and take the last element.\n  let hoverStack: Array<ElementNode> = []\n  const getHoveredElement = () => hoverStack[hoverStack.length - 1] as ElementNode | undefined\n\n  function addEventHandlers(el: ElementNode, handlers: EventHandlers) {\n    el.addEventListener('click', handlers.click as EventListener, {\n      capture: true,\n    })\n    el.addEventListener('contextmenu', handlers.contextmenu as EventListener, {\n      capture: true,\n    })\n    // We listen for the initial mousemove event, in case the overlay is enabled whilst the cursor is already over an element\n    // mouseenter and mouseleave listeners are attached within this handler\n    el.addEventListener('mousemove', handlers.mousemove as EventListener, {\n      once: true,\n      capture: true,\n    })\n    // Listen for mousedown in case we need to prevent default behavior\n    el.addEventListener('mousedown', handlers.mousedown as EventListener, {\n      capture: true,\n    })\n  }\n\n  function removeEventHandlers(el: ElementNode, handlers: EventHandlers) {\n    el.removeEventListener('click', handlers.click as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('contextmenu', handlers.contextmenu as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('mousemove', handlers.mousemove as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('mousedown', handlers.mousedown as EventListener, {\n      capture: true,\n    })\n    el.removeEventListener('mouseenter', handlers.mouseenter as EventListener)\n    el.removeEventListener('mouseleave', handlers.mouseleave as EventListener)\n  }\n\n  /**\n   * Executed when element enters the viewport\n   * Enables an element’s event handlers\n   */\n  function activateElement({id, elements, handlers}: OverlayElement) {\n    const {element, measureElement} = elements\n    addEventHandlers(element, handlers)\n    ro.observe(measureElement)\n    handler({\n      type: 'element/activate',\n      id,\n    })\n  }\n\n  /**\n   * Executed when element leaves the viewport\n   * Disables an element’s event handlers\n   */\n  function deactivateElement({id, elements, handlers}: OverlayElement) {\n    const {element, measureElement} = elements\n    removeEventHandlers(element, handlers)\n    ro.unobserve(measureElement)\n    // Scrolling from a hovered element will not trigger mouseleave event, so filter the stack\n    hoverStack = hoverStack.filter((el) => el !== element)\n    handler({\n      type: 'element/deactivate',\n      id,\n    })\n  }\n\n  function setOverlayCursor(element: ElementNode) {\n    // Don't set the cursor if mutations are unavailable\n    if (!inFrame || !optimisticActorReady) return\n\n    // Loops through the entire hoverStack, trying to set the cursor if the\n    // stack element matches the element passed to the function, otherwise\n    // restoring the cursor\n    for (const hoverstackElement of hoverStack) {\n      if (element === hoverstackElement) {\n        const targetSanityData = elementsMap.get(element)?.sanity\n        if (!targetSanityData || !isSanityNode(targetSanityData)) return\n\n        const dragGroup = resolveDragAndDropGroup(\n          element,\n          targetSanityData,\n          elementSet,\n          elementsMap,\n        )\n\n        if (dragGroup) {\n          // Store any existing cursor so it can be restored later\n          const existingCursor = element.style.cursor\n          if (existingCursor) {\n            cursorMap.set(element, existingCursor)\n          }\n\n          handler({\n            type: 'overlay/setCursor',\n            element,\n            cursor: 'move',\n          })\n\n          continue\n        }\n      }\n\n      restoreOverlayCursor(hoverstackElement)\n    }\n  }\n\n  function restoreOverlayCursor(element: ElementNode) {\n    // Restore any previously stored cursor (if it exists)\n    const previousCursor = cursorMap.get(element)\n\n    handler({\n      type: 'overlay/setCursor',\n      element,\n      cursor: previousCursor,\n    })\n  }\n\n  /**\n   * Stores an element’s DOM node and decoded sanity data in state and sets up event handlers\n   */\n  function registerElement({elements, sanity}: ResolvedElement) {\n    const {element, measureElement} = elements\n\n    const eventHandlers: EventHandlers = {\n      click(event) {\n        const target = event.target as ElementNode | null\n\n        if (element === getHoveredElement() && element.contains(target)) {\n          if (preventDefault) {\n            event.preventDefault()\n            event.stopPropagation()\n          }\n\n          const sanity = elementsMap.get(element)?.sanity\n          if (sanity && !activeDragSequence) {\n            handler({\n              type: 'element/click',\n              id,\n              sanity,\n            })\n          }\n        }\n      },\n      contextmenu(event) {\n        if (!('path' in sanity) || !inFrame || !optimisticActorReady) return\n\n        // This is a temporary check as the context menu only supports array\n        // items (for now). We split the path into segments, if a `_key` exists\n        // in last path segment, we assume it's an array item, and so return\n        // early if it is some other type.\n        if (!sanity.path.split('.').pop()?.includes('[_key==')) return\n\n        const target = event.target as ElementNode | null\n        if (element === getHoveredElement() && element.contains(target)) {\n          if (preventDefault) {\n            event.preventDefault()\n            event.stopPropagation()\n          }\n          handler({\n            type: 'element/contextmenu',\n            id,\n            position: {\n              x: event.clientX,\n              y: event.clientY,\n            },\n            sanity,\n          })\n        }\n      },\n      mousedown(event) {\n        // prevent iframe from taking focus\n        event.preventDefault()\n\n        if (event.currentTarget !== hoverStack.at(-1)) return\n\n        if (element.getAttribute('data-sanity-drag-disable')) return\n\n        // disable dnd in non-studio contexts\n        if (!inFrame || !optimisticActorReady) return\n\n        const targetSanityData = elementsMap.get(element)?.sanity\n\n        if (\n          !targetSanityData ||\n          !isSanityNode(targetSanityData) ||\n          !isSanityArrayPath(targetSanityData.path)\n        )\n          return\n\n        const dragGroup = resolveDragAndDropGroup(element, sanity, elementSet, elementsMap)\n\n        if (!dragGroup) return\n\n        handleOverlayDrag({\n          element,\n          handler,\n          mouseEvent: event as MouseEvent,\n          overlayGroup: dragGroup,\n          target: targetSanityData,\n          onSequenceStart: () => {\n            activeDragSequence = true\n          },\n          onSequenceEnd: () => {\n            // delay drag sequence end to prevent click events from firing just after drag sequences\n            setTimeout(() => {\n              activeDragSequence = false\n            }, 250)\n          },\n        })\n      },\n      mousemove(event) {\n        eventHandlers.mouseenter(event)\n        const el = event.currentTarget as ElementNode | null\n        if (el) {\n          el.addEventListener('mouseenter', eventHandlers.mouseenter as EventListener)\n          el.addEventListener('mouseleave', eventHandlers.mouseleave as EventListener)\n        }\n      },\n      mouseenter() {\n        // If the Vercel Visual Editing provided by Vercel Toolbar is active, do not overlap overlays\n        if (\n          (document.querySelector('vercel-live-feedback') &&\n            element.closest('[data-vercel-edit-info]')) ||\n          element.closest('[data-vercel-edit-target]')\n        ) {\n          return\n        }\n        hoverStack.push(element)\n\n        handler({\n          type: 'element/mouseenter',\n          id,\n          rect: getRect(element),\n        })\n\n        setOverlayCursor(element)\n      },\n      mouseleave(e) {\n        function leave() {\n          hoverStack.pop()\n          const hoveredElement = getHoveredElement()\n\n          handler({\n            type: 'element/mouseleave',\n            id,\n          })\n\n          if (hoveredElement) {\n            setOverlayCursor(hoveredElement)\n            const overlayElement = elementsMap.get(hoveredElement)\n            if (overlayElement) {\n              handler({\n                type: 'element/mouseenter',\n                id: overlayElement.id,\n                rect: getRect(hoveredElement),\n              })\n            }\n          }\n\n          restoreOverlayCursor(element)\n        }\n\n        /**\n         * If moving to an element within the overlay which handles pointer events, attach a new\n         * event handler to that element and defer the original leave event\n         */\n        function addDeferredLeave(el: ElementNode) {\n          const deferredLeave = (e: MouseEvent) => {\n            const {relatedTarget} = e\n            const deferredContainer = findOverlayElement(relatedTarget)\n            if (!deferredContainer) {\n              el.removeEventListener('mouseleave', deferredLeave as EventListener)\n              leave()\n            } else if (relatedTarget && isElementNode(relatedTarget)) {\n              el.removeEventListener('mouseleave', deferredLeave as EventListener)\n              addDeferredLeave(relatedTarget)\n            }\n          }\n          el.addEventListener('mouseleave', deferredLeave as EventListener)\n        }\n\n        const {relatedTarget} = e as MouseEvent\n        const container = findOverlayElement(relatedTarget)\n        const isInteractiveOverlayElement = overlayElement.contains(container)\n\n        if (isElementNode(container) && isInteractiveOverlayElement) {\n          return addDeferredLeave(container)\n        }\n\n        leave()\n      },\n    }\n\n    const id = uuid()\n    const sanityNode = {\n      id,\n      elements,\n      sanity,\n      handlers: eventHandlers,\n    }\n    elementSet.add(element)\n    measureElements.set(measureElement, element)\n    elementIdMap.set(id, element)\n    elementsMap.set(element, sanityNode)\n\n    io?.observe(element)\n\n    handler({\n      type: 'element/register',\n      id,\n      element,\n      rect: getRect(element),\n      sanity,\n      dragDisabled: !!element.getAttribute('data-sanity-drag-disable'),\n    })\n\n    if (activated) {\n      activateElement(sanityNode)\n    }\n  }\n\n  function updateElement({elements, sanity}: ResolvedElement) {\n    const {element} = elements\n    const overlayElement = elementsMap.get(element)\n    if (overlayElement) {\n      elementsMap.set(element, {...overlayElement, sanity})\n      handler({\n        type: 'element/update',\n        id: overlayElement.id,\n        rect: getRect(element),\n        sanity: sanity,\n      })\n    }\n  }\n\n  function parseElements(node: ElementNode | {childNodes: ElementNode[]}) {\n    const sanityNodes = findSanityNodes(node)\n    for (const sanityNode of sanityNodes) {\n      const {element} = sanityNode.elements\n      if (elementsMap.has(element)) {\n        updateElement(sanityNode)\n      } else {\n        registerElement(sanityNode)\n      }\n    }\n  }\n\n  function unregisterElement(element: ElementNode) {\n    const overlayElement = elementsMap.get(element)\n    if (overlayElement) {\n      const {id, handlers} = overlayElement\n      removeEventHandlers(element, handlers)\n      ro.unobserve(element)\n      elementsMap.delete(element)\n      elementSet.delete(element)\n      elementIdMap.delete(id)\n      handler({\n        type: 'element/unregister',\n        id,\n      })\n    }\n  }\n\n  function handleMutation(mutations: MutationRecord[]) {\n    let mutationWasInScope = false\n    // For each DOM mutation, we find the relevant element node and register or\n    // update it. This function doesn't handle checking if the node actually\n    // contains any relevant Sanity data, it just detects new or changed DOM\n    // elements and hands them off to `parseElements` to and determine if we\n    // have Sanity nodes\n    for (const mutation of mutations) {\n      const {target, type} = mutation\n      // We need to target an element, so if the mutated node was just a text\n      // change, we look at that node's parent instead\n      const node: Node | null = type === 'characterData' ? target.parentElement : target\n      // We ignore any nodes related to the overlay container element\n      if (node === overlayElement || overlayElement.contains(node)) {\n        continue\n      }\n\n      mutationWasInScope = true\n      if (isElementNode(node)) {\n        parseElements({childNodes: [node]})\n      }\n    }\n\n    // If the mutation is \"in scope\" (i.e. happened outside of the overlay\n    // container) we need to check if it removed any of the elements we are\n    // currently tracking\n    if (mutationWasInScope) {\n      for (const element of elementSet) {\n        if (!element.isConnected) {\n          unregisterElement(element)\n        }\n      }\n    }\n  }\n\n  function updateRect(el: ElementNode) {\n    const overlayElement = elementsMap.get(el)\n    if (overlayElement) {\n      handler({\n        type: 'element/updateRect',\n        id: overlayElement.id,\n        rect: getRect(el),\n      })\n    }\n  }\n\n  function handleResize(entries: ResizeObserverEntry[]) {\n    for (const entry of entries) {\n      const target = entry.target\n\n      if (isElementNode(target)) {\n        const element = measureElements.get(target)\n        if (!element) return\n        updateRect(element)\n      }\n    }\n  }\n\n  function handleIntersection(entries: IntersectionObserverEntry[]) {\n    if (!activated) return\n    for (const entry of entries) {\n      const {target} = entry\n      const match = isElementNode(target) && elementsMap.get(target)\n      if (!match) continue\n      if (entry.isIntersecting) {\n        activateElement(match)\n      } else {\n        deactivateElement(match)\n      }\n    }\n  }\n\n  function handleBlur(event: MouseEvent) {\n    const element = findOverlayElement(event.target)\n\n    if (element) {\n      if (element.dataset['sanityOverlayElement'] === 'capture') {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      return\n    }\n\n    hoverStack = []\n    handler({\n      type: 'overlay/blur',\n    })\n  }\n\n  function handleWindowResize() {\n    for (const element of elementSet) {\n      updateRect(element)\n    }\n  }\n\n  function handleKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      hoverStack = []\n      handler({\n        type: 'overlay/blur',\n      })\n    }\n  }\n\n  function handleWindowScroll(event: Event) {\n    const {target} = event\n\n    if (target === window.document || !isElementNode(target)) {\n      return\n    }\n\n    for (const element of elementSet) {\n      if (target.contains(element)) {\n        updateRect(element)\n      }\n    }\n  }\n\n  function activate() {\n    if (activated) return\n    io = new IntersectionObserver(handleIntersection, {\n      threshold: 0.3,\n    })\n    elementSet.forEach((element) => io!.observe(element))\n    handler({\n      type: 'overlay/activate',\n    })\n    activated = true\n  }\n\n  function deactivate() {\n    if (!activated) return\n    io?.disconnect()\n    elementSet.forEach((element) => {\n      const overlayElement = elementsMap.get(element)\n      if (overlayElement) {\n        deactivateElement(overlayElement)\n      }\n    })\n    handler({\n      type: 'overlay/deactivate',\n    })\n    activated = false\n  }\n\n  function destroy() {\n    window.removeEventListener('click', handleBlur)\n    window.removeEventListener('contextmenu', handleBlur)\n    window.removeEventListener('keydown', handleKeydown)\n    window.removeEventListener('resize', handleWindowResize)\n    window.removeEventListener('scroll', handleWindowScroll)\n    mo.disconnect()\n    ro.disconnect()\n\n    elementSet.forEach((element) => {\n      unregisterElement(element)\n    })\n\n    elementIdMap.clear()\n    elementSet.clear()\n\n    hoverStack = []\n    deactivate()\n  }\n\n  function create() {\n    window.addEventListener('click', handleBlur)\n    window.addEventListener('contextmenu', handleBlur)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('resize', handleWindowResize)\n    window.addEventListener('scroll', handleWindowScroll, {\n      capture: true,\n      passive: true,\n    })\n    ro = new ResizeObserver(handleResize)\n    mo = new MutationObserver(handleMutation)\n    mo.observe(document.body, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true,\n    })\n\n    parseElements(document.body)\n    activate()\n  }\n\n  window.document.fonts.ready.then(() => {\n    for (const element of elementSet) {\n      updateRect(element)\n    }\n  })\n\n  create()\n\n  return {\n    activate,\n    deactivate,\n    destroy,\n  }\n}\n","import {createContext} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport type {SharedStateStore} from './sharedStateStore'\n\nexport interface SharedStateContextValue {\n  comlink?: VisualEditingNode\n  store: SharedStateStore\n}\n\nexport const SharedStateContext = createContext<SharedStateContextValue | null>(null)\n"],"names":["useOptimistic","passthrough","reducer","$","_c","pristine","setPristine","useState","optimistic","setOptimistic","lastEvent","setLastEvent","lastPassthrough","setLastPassthrough","actor","useOptimisticActor","t0","action","prevState","Array","isArray","reduce","acc","reducer_0","document","id","getPublishedId","originalId","type","reduceStateFromAction","useEffectEvent","t1","updateLastPassthrough","t2","t3","t4","t5","isEmptyActor","pristineTimeout","rebasedSub","on","_event","event","clearTimeout","pristineSub","unsubscribe","useEffect","Error","startTransition","byteToHex","i","push","toString","slice","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","native","randomUUID","v4","options","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","getRect","element","domRect","getBoundingClientRect","x","scrollX","y","scrollY","w","width","h","height","offsetRect","rect","px","axis","rayIntersect","l1","l2","x1","y1","x2","y2","x3","y3","x4","y4","denominator","ua","ub","rectEqual","r1","r2","rayRectIntersections","line","rectLines","intersections","length","intersection","isDuplicate","j","sort","a","b","pointDist","p1","p2","Math","sqrt","findClosestIntersection","ray","targets","flow","rayOrigin","some","pointInBounds","point","bounds","withinX","withinY","t","min","closestIntersection","closestRect","target","firstIntersection","scaleRect","scale","origin","originX","originY","getRectGroupYExtent","rects","minGroupY","max","map","r","maxGroupY","body","scrollHeight","findRectSanityData","overlayGroup","find","e","elements","sanity","resolveInsertPosition","insertPosition","Object","values","every","v","left","right","top","bottom","calcMousePos","bodyBounds","clientX","clientY","window","buildPreviewSkeleton","mousePos","scaleFactor","children","querySelectorAll","childRects","child","tagName","offsetX","offsetY","maxWidth","calcGroupBoundsPreview","groupBoundsX","minGroupX","maxGroupX","offsetWidth","getRectGroupXExtent","groupBoundsY","canOffsetX","innerWidth","canOffsetY","canOffset","offsetDist","async","resetMinimapWrapperTransform","endYOrigin","prescaleHeight","handler","rectUpdateFrequency","previousRootStyleValues","Promise","resolve","transform","getComputedStyle","DOMMatrix","maxScroll","innerHeight","prevScrollY","addEventListener","style","transition","scrollTo","behavior","setTimeout","display","once","overflow","documentElement","minimapScaleApplied","mousePosInverseTransform","handleOverlayDrag","opts","mouseEvent","onSequenceStart","onSequenceEnd","button","focus","getAttribute","filter","dragGroup","disableMinimap","preventInsertDefault","documentHeightOverride","groupHeightOverride","initialMousePos","scaleTarget","minYScaled","groupHeight","padding","scaledRects","calcMinimapTransformValues","sequenceStarted","minimapPromptShown","mousedown","rectsInterval","setInterval","applyMinimap","skeleton","transformOrigin","applyMinimapWrapperTransform","then","groupRect","handleScroll","abs","deltaY","shiftKey","dispatchEvent","CustomEvent","handleMouseMove","preventDefault","inverseMatrix","inverse","transformedPoint","DOMPoint","matrixTransform","calcMousePosInverseTransform","newInsertPosition","rayLeft","rayRight","rayTop","rayBottom","calcInsertPosition","stringify","JSON","handleMouseUp","clearInterval","removeFrameListeners","removeKeyListeners","removeMouseListeners","handleKeyup","key","handleBlur","removeEventListener","isElementNode","HTMLElement","SVGElement","findNonInlineElement","parent","parentElement","findOverlayElement","el","dataset","sanityOverlayElement","testAndDecodeStega","str","isAltText","input","VERCEL_STEGA_REGEX","lastIndex","test","decoded","vercelStegaDecode","href","replace","err","console","error","decodeStega","node","nodeType","Node","ELEMENT_NODE","isImgElement","isTimeElement","isSvgRootElement","toUpperCase","isSanityNode","findCommonPath","first","second","firstParts","split","secondParts","maxLength","reverse","parts","part","join","findCommonSanityData","nodes","n","_i","sanityNodes","common","consistentValueKeys","undefined","path","findSanityNodes","addElement","data","decodeSanityNodeData","measureElement","childNodes","textContent","sanityEditTarget","nodesInTarget","commonData","TEXT_NODE","sanityEditInfo","alt","dateTime","ariaLabel","isSanityArrayPath","lastDotIndex","lastIndexOf","substring","includes","getSanityNodeArrayPath","sanityNodesExistInSameArray","sanityNode1","sanityNode2","resolveDragAndDropGroup","elementSet","elementsMap","targetDragGroup","group","elData","get","elDragDisabled","elDragGroup","elHasSanityAttribution","sharedDragGroup","createOverlayController","overlayElement","inFrame","optimisticActorReady","activated","elementIdMap","Map","WeakMap","Set","measureElements","cursorMap","ro","io","mo","activeDragSequence","hoverStack","getHoveredElement","removeEventHandlers","handlers","click","capture","contextmenu","mousemove","mouseenter","mouseleave","activateElement","addEventHandlers","observe","deactivateElement","unobserve","setOverlayCursor","hoverstackElement","targetSanityData","existingCursor","cursor","set","restoreOverlayCursor","previousCursor","registerElement","eventHandlers","contains","stopPropagation","sanity2","pop","position","currentTarget","at","querySelector","closest","leave","hoveredElement","relatedTarget","container","isInteractiveOverlayElement","addDeferredLeave","deferredLeave","uuid","sanityNode","add","dragDisabled","updateElement","parseElements","has","unregisterElement","delete","handleMutation","mutations","mutationWasInScope","mutation","isConnected","updateRect","handleResize","entries","entry","handleIntersection","match","isIntersecting","handleWindowResize","handleKeydown","handleWindowScroll","activate","IntersectionObserver","threshold","forEach","deactivate","disconnect","fonts","ready","passive","ResizeObserver","MutationObserver","attributes","characterData","childList","subtree","destroy","clear","SharedStateContext","createContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}},
    {"offset": {"line": 1283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}