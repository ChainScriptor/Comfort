{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/optimistic/state/documentMutator.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/optimistic/state/datasetMutator.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {SanityEncoder, type Transaction} from '@sanity/mutate'\nimport {\n  documentMutatorMachine,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {enqueueActions, fromPromise} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDocumentMutator = (comlink: VisualEditingNode) => {\n  const fetchSnapshot = fromPromise(\n    async ({input, signal}: {input: {id: string; client: SanityClient}; signal: AbortSignal}) => {\n      const {id} = input\n      const {snapshot} = await comlink.fetch(\n        'visual-editing/fetch-snapshot',\n        {documentId: id},\n        {\n          signal,\n        },\n      )\n      return snapshot\n    },\n  )\n\n  const submitMutations = fromPromise(\n    async ({input}: {input: {client: SanityClient; transactions: Transaction[]}}) => {\n      const {transactions} = input\n      for (const transaction of transactions) {\n        const data = SanityEncoder.encodeTransaction(transaction)\n        return comlink.post('visual-editing/mutate', data)\n      }\n    },\n  )\n\n  return documentMutatorMachine.provide({\n    actions: {\n      'send sync event to parent': enqueueActions(({enqueue}) => {\n        // Original action provided by the `documentMutatorMachine`\n        enqueue.sendParent(\n          ({context}) =>\n            ({\n              type: 'sync',\n              id: context.id,\n              document: context.remote!,\n            }) satisfies DocumentMutatorMachineParentEvent,\n        )\n        // Additional action so that we can determine when the snapshot is ready\n        enqueue.emit(({context}) => ({type: 'ready', snapshot: context.local}))\n      }),\n    },\n    actors: {\n      'fetch remote snapshot': fetchSnapshot,\n      'submit mutations as transactions': submitMutations,\n    },\n  })\n}\n","/**\n * The logic here is intended to live inside a preview iframe, and listen to events from the parent frame.\n * It also supports running in a \"detached\" mode, where it has to setup authenticated EventSource conenctions and perform data fetching itself.\n */\n\nimport {type SanityClient} from '@sanity/client'\nimport {\n  createSharedListener,\n  documentMutatorMachine,\n  type DocumentMutatorMachineInput,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {assertEvent, assign, emit, setup, stopChild, type ActorRefFrom} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\nimport {createDocumentMutator} from './documentMutator'\n\nexport interface DatasetMutatorMachineInput extends Omit<DocumentMutatorMachineInput, 'id'> {\n  client: SanityClient\n  /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n  sharedListener?: ReturnType<typeof createSharedListener>\n}\n\nexport const datasetMutatorMachine = setup({\n  types: {} as {\n    context: {\n      client: SanityClient\n      /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n      sharedListener?: ReturnType<typeof createSharedListener>\n      documents: Record<string, ActorRefFrom<ReturnType<typeof createDocumentMutator>>>\n    }\n    events:\n      | {type: 'observe'; documentId: string}\n      | {type: 'unobserve'; documentId: string}\n      | {type: 'add document actor'; documentId: string}\n      | {type: 'stop document actor'; documentId: string}\n      | DocumentMutatorMachineParentEvent\n    input: DatasetMutatorMachineInput\n    emitted: DocumentMutatorMachineParentEvent\n  },\n  actions: {\n    'emit sync event': emit(({event}) => {\n      assertEvent(event, 'sync')\n      return event\n    }),\n    'emit mutation event': emit(({event}) => {\n      assertEvent(event, 'mutation')\n      return event\n    }),\n    'emit rebased event': emit(({event}) => {\n      assertEvent(event, ['rebased.local', 'rebased.remote'])\n      return event\n    }),\n    'emit pristine event': emit(({event}) => {\n      assertEvent(event, ['pristine'])\n      return event\n    }),\n    'add document actor': assign({\n      documents: ({context, event, spawn}) => {\n        assertEvent(event, 'observe')\n        const id = event.documentId\n        // Adding the same documentId multiple times is a no-op\n        if (context.documents[id]) return context.documents\n        return {\n          ...context.documents,\n          [id]: spawn('documentMutatorMachine', {\n            input: {\n              id,\n              client: context.client,\n              sharedListener: context.sharedListener || createSharedListener(context.client),\n            },\n            id,\n          }),\n        }\n      },\n    }),\n    'stop remote snapshot': stopChild(({context, event}) => {\n      assertEvent(event, 'unobserve')\n      return context.documents[event.documentId]!\n    }),\n    'remove remote snapshot from context': assign({\n      documents: ({context, event}) => {\n        assertEvent(event, 'unobserve')\n        // Removing a non-existing documentId is a no-op\n        if (!context.documents[event.documentId]) return context.documents\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {[event.documentId]: _, ...documents} = context.documents\n        return documents\n      },\n    }),\n  },\n  actors: {\n    documentMutatorMachine,\n  },\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QBsD2BjAhsgIhgrgLZgB2ALgMTICWsZpA2gAwC6ioADqrNWdaiXYgAHogC0ADgBMAOgkA2ACyKArBICcTdfKXSANCACeiFQHYZpgMxWV800yYqp6gIyn5AXw8G0WXAWJyCnwSGjpGViEuHj4BIVEEKUt5OSlFU1smFwkFW0sDY0T1GRUXRXkXKVN7HSYJJkUvHwxsPHQiUjIZDgAnWj4SMApCfDJMemY2JBBo3n5BaYSXeVlbKRUsiXdFSxcXfKNERSqZTbr1zVMJNyaQX1aAzpkIah6yQwp0VEJCXkmo7hzOKLRDLFwyFxaSzXKTOKQudSKCQFRDOczqCSWJjwjbHCQqRFebwgEioCBwIT3fztQJkAExebxcQuFEIZaWGRIrF7dSXKTyFSNYlUtodcjdPp0aiDelAhagBLpVmWAmc46mNwSZTyLQuFS3EWPcUvN6FTiA2LykSoq6c6wbCqVUzparKioyRFVfkq1zqNSWIkeIA */\n  id: 'dataset-mutator',\n  context: ({input}) => ({\n    documents: {},\n    client: input.client,\n    sharedListener: input.sharedListener,\n  }),\n\n  on: {\n    'sync': {actions: ['emit sync event']},\n    'mutation': {actions: ['emit mutation event']},\n    'rebased.*': {actions: ['emit rebased event']},\n    'pristine': {actions: ['emit pristine event']},\n    'observe': {\n      actions: ['add document actor'],\n    },\n    'unobserve': {\n      actions: ['stop remote snapshot', 'remove remote snapshot from context'],\n    },\n  },\n\n  initial: 'pristine',\n\n  states: {\n    pristine: {},\n  },\n})\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDatasetMutator = (comlink: VisualEditingNode) => {\n  return datasetMutatorMachine.provide({\n    actors: {\n      documentMutatorMachine: createDocumentMutator(comlink),\n    },\n  })\n}\n"],"names":["a","e","i","l","s","documentMutatorMachine","createSharedListener","fromPromise","enqueueActions","setup","emit","assertEvent","assign","stopChild","SanityEncoder","createDocumentMutator","comlink","fetchSnapshot","async","input","signal","id","snapshot","fetch","documentId","submitMutations","transactions","transaction","data","encodeTransaction","post","provide","actions","enqueue","sendParent","context","type","document","remote","local","actors","datasetMutatorMachine","types","event","documents","spawn","client","sharedListener","_","createMachine","on","sync","mutation","pristine","observe","unobserve","initial","states","createDatasetMutator"],"mappings":"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","ignoreList":[0,1]}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/History.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/Meta.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/useDragEvents.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaContext.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/schema/useSchema.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/context-menu/contextMenuItems.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/context-menu/ContextMenu.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/util/getLinkHref.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsContext.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/ElementOverlay.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/preview/usePreviewSnapshots.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/OverlayDragGroupRect.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/OverlayDragInsertMarker.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/OverlayDragPreview.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/OverlayMinimapPrompt.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/elementsReducer.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/overlayStateReducer.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsProvider.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaProvider.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/shared-state/SharedStateProvider.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/telemetry/sendTelemetry.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/usePerspectiveSync.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/useReportDocuments.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/Overlays.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/useController.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/Refresh.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/useDatasetMutator.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/optimistic/state/createSharedListener.ts","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/VisualEditing.tsx","file://C%3A/Users/sefea/Desktop/build/comfort/node_modules/%40sanity/visual-editing/src/ui/useComlink.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@repo/visual-editing-helpers'\nimport {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n    }\n  }, [node, onDismiss])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {pathToUrlString} from '@repo/visual-editing-helpers'\nimport {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is ReactElement => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingBottom={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n\n      {title && (\n        <Tab gap={1} paddingBottom={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {SanityNode, VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {useEffect, useMemo, useState, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchSchema])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [comlink, elements])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@repo/visual-editing-helpers'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `@sanity/presentation` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {defineEvent} from '@sanity/telemetry'\nimport type {VisualEditingNode} from '../../types'\n\nconst events = {\n  'Visual Editing Drag Sequence Completed': defineEvent({\n    name: 'Visual Editing Drag Sequence Completed',\n    description: 'An array is successfully reordered using drag and drop.',\n    version: 1,\n  }),\n}\n\ntype EventDataMap = {\n  [K in keyof typeof events]: (typeof events)[K] extends ReturnType<typeof defineEvent<infer T>>\n    ? T\n    : never\n}\n\nfunction sendTelemetry<K extends keyof typeof events>(\n  name: K,\n  data: EventDataMap[K] extends void ? null | undefined : EventDataMap[K],\n  comlink: VisualEditingNode | undefined,\n): void {\n  if (!comlink) return\n\n  const event = events[name]\n\n  if (!event) {\n    throw new Error(`Telemetry event: ${name} does not exist`)\n  } else {\n    comlink.post('visual-editing/telemetry-log', {event, data})\n  }\n}\n\nexport {sendTelemetry}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import {DRAFTS_PREFIX} from '@repo/visual-editing-helpers/csm'\nimport type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return {\n          ...sanity,\n          id: 'isDraft' in sanity ? `${DRAFTS_PREFIX}${sanity.id}` : sanity.id,\n        }\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {isAltKey, isHotkey, type VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {Status} from '@sanity/comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {getDraftId, getPublishedId} from '../util/documents'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {sendTelemetry} from './telemetry/sendTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null, comlink)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if ((inFrame && status !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    isDragging,\n    optimisticActorReady,\n    status,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n      <LayerProvider>\n        <PortalProvider element={rootElement}>\n          <SchemaProvider comlink={comlink} elements={elements}>\n            <PreviewSnapshotsProvider comlink={comlink}>\n              <SharedStateProvider comlink={comlink}>\n                <Root\n                  data-fading-out={fadingOut ? '' : undefined}\n                  data-overlays={overlaysFlash ? '' : undefined}\n                  ref={setRootElement}\n                  $zIndex={zIndex}\n                >\n                  <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                  <OverlaysController\n                    comlink={comlink}\n                    dispatch={dispatch}\n                    inFrame={inFrame}\n                    onDrag={updateDragPreviewCustomProps}\n                    overlayEnabled={overlayEnabled}\n                    rootElement={rootElement}\n                  />\n                  {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                  {elementsToRender}\n\n                  {isDragging && !dragMinimapTransition && (\n                    <>\n                      {dragInsertPosition && (\n                        <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                      )}\n                      {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                      {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                    </>\n                  )}\n                  {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                </Root>\n              </SharedStateProvider>\n            </PreviewSnapshotsProvider>\n          </SchemaProvider>\n        </PortalProvider>\n      </LayerProvider>\n    </ThemeProvider>\n  )\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>()\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, optimisticActorReady])\n\n  return overlayController\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      comlink\n        .fetch('visual-editing/features', undefined, {\n          signal: featuresFetch.signal,\n          suppressWarnings: true,\n        })\n        .then((data) => {\n          if (data.features['optimistic']) {\n            setActor(mutator)\n          }\n        })\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          console.warn(\n            '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n          )\n        })\n    }, 'connected')\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","import {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  useEffect(() => setInFrame(window.self !== window.top || Boolean(window.opener)), [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const comlink = useComlink(inFrame === true)\n  useDatasetMutator(comlink)\n\n  const children = (\n    <>\n      {inFrame !== null && (\n        <Overlays\n          comlink={comlink}\n          componentResolver={components}\n          inFrame={inFrame}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {createNode, createNodeMachine} from '@sanity/comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): VisualEditingNode | undefined {\n  const [node, setNode] = useState<VisualEditingNode>()\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n\n    let timeout = 0\n    const stop = instance.start()\n    // Wait with forwarding the comlink until the connection is established\n    const unsubscribe = instance.onStatus(() => {\n      // Due to race conditions in when Presentation Tool loads up components with handlers for comlink, we need to wait a bit before forwarding the comlink instance\n      timeout = window.setTimeout(() => {\n        setNode(instance)\n      }, 3_000)\n    }, 'connected')\n\n    return () => {\n      clearTimeout(timeout)\n      unsubscribe()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  return node\n}\n"],"names":["jsx","jsxs","Fragment","c","useEffect","createContext","useContext","useState","memo","useRef","isValidElement","useSyncExternalStore","useReducer","createPortal","isAltKey","isHotkey","createCompatibilityActors","InsertAboveIcon","InsertBelowIcon","getNodeIcon","CopyIcon","RemoveIcon","SortIcon","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","InsertMenu","MenuGroup","MenuDivider","Box","Text","Spinner","Stack","Flex","Menu","Popover","PopoverPortal","MenuItem","dt","Card","PointerEvents","DocumentIcon","DragHandleIcon","usePrefersDark","useTheme_v2","Hotkeys","ExpandIcon","LayerProvider","PortalProvider","ThemeProvider","studioTheme","isHTMLAnchorElement","isHTMLElement","useDocuments","getArrayItemKeyAndParentPath","get","getArrayInsertPatches","getArrayMovePatches","getArrayRemovePatches","getArrayDuplicatePatches","useOptimisticActorReady","useOptimisticActor","getDraftId","getPublishedId","SharedStateContext","createOverlayController","sanityNodesExistInSameArray","u","at","remove","insert","createEditUrl","studioPath","pathToUrlString","DRAFTS_PREFIX","scrollIntoView","createNode","createNodeMachine","createActor","setActor","e","ReplaySubject","Subject","merge","createDatasetMutator","createDocumentMutator","History","props","$","_c","comlink","history","t0","t1","t2","t3","on","data","update","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","_temp","event","customEvent","CustomEvent","detail","cancelable","window","dispatchEvent","SchemaContext","useSchema","context","Error","getArrayRemoveAction","node","doc","type","patch","async","getSnapshot","getArrayInsertAction","insertType","position","getDuplicateAction","getContextMenuItems","field","parent","items","push","getDuplicateItem","getRemoveItems","getMoveItems","label","icon","action","name","getContextMenuArrayItems","options","insertMenu","width","views","some","view","undefined","component","boundaryElement","InsertMenuWrapper","onSelect","schemaType","of","filter","item","map","t","getContextMenuUnionItems","Promise","resolve","withDivider","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","length","t4","Symbol","for","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","fontSize","popover","space","POPOVER_MARGINS","ContextMenuItem","onDismiss","onClick","hotkeys","text","disabled","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","getField","getDocument","setItems","t6","fetchContextMenuItems","id","items_0","getBoundingClientRect","bottom","left","right","top","height","contextMenuReferenceElement","t7","t8","t9","t10","minWidth","maxWidth","flex","size","t11","t12","t13","t14","t15","children","weight","gap","i","style","t16","t17","t18","t19","t20","open","content","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","Root","styled","Actions","ActionOpen","Tab","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","path","baseUrl","tool","workspace","fromString","createIntentLink","previewSnapshots","usePreviewSnapshots","bb0","find","snapshot","_id","bb1","value","componentContext","customComponents","resolved","isReactElementOverlayComponent","Array","isArray","useCustomComponents","dangerouslySetInnerHTML","__html","paddingBottom","Link","marginRight","className","props_0","ElementOverlay","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","scrolledIntoViewRef","w","h","transform","current","behavior","actions","block","inline","scrollMode","_temp2","_temp3","as","rel","onStoreChange","handlePopState","addEventListener","removeEventListener","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","markerThickness","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","theme","radius","number","inMin","inMax","outMin","outMax","clamp","childRects","imageRects","textRects","color","from","r_1","r","fill","viewBox","shadow","overflow","tone","scheme","tagName","r_0","OverlayMinimapPrompt","align","keys","elementsReducer","elements","message","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","snapshots","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","signal","response","fetch","suppressWarnings","fetchSchema","schemaFetch","AbortController","unsub","onStatus","abort","reportedPathsRef","reportPaths","controller","paths_0","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","paths","p","signal_0","response_0","types","_type","node_0","schemaType_0","nodePath","flatMap","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","Boolean","console","warn","store","initialState","listeners","Set","getState","setState","fn","forEach","l","add","listener","delete","createStore","SharedStateProvider","catch","value_0","prev","key","Object","fromEntries","entries","reason","debug","events","description","version","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","id_0","send","documentId","id_1","OverlaysController","dispatch","inFrame","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","arrayPath","referenceItemKey","elementValue","getFromPath","_key","useDragEndEvents","enabled","dragGroup","flow","sendTelemetry","cursor","removeProperty","useController","overlayController","optimisticActorReady","overlayElement","destroy","activate","deactivate","Overlays","_componentResolver","status","setStatus","setRootElement","setOverlayEnabled","unsubs","data_0","status_0","usePerspectiveSync","then","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","a","b","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","_temp5","handleKeydown","_temp6","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","elementsToRender","t21","t22","t23","t24","t25","t26","t27","prevId","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useDatasetMutator","incomingConnection$","incomingMutations$","createSharedListener","datasetMutator","mutator","input","client","withConfig","sharedListener","start","featuresFetch","features","optimistic","stop","VisualEditing","components","portal","setInFrame","self","opener","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","active","setNode","instance","connectTo","provide","actors","timeout","unsubscribe","useComlink","displayName"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}},
    {"offset": {"line": 2092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}