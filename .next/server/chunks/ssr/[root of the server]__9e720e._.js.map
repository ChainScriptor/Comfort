{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/components/HomeTabBar.tsx"],"sourcesContent":["import { productType } from \"@/constants/index\";\r\nimport { Repeat } from \"lucide-react\";\r\n\r\n\r\n\r\ninterface Props {\r\n    selectedTab: string;\r\n    onTabSelect: (tab: string) => void;\r\n}\r\n\r\nconst HomeTabBar = ({ selectedTab, onTabSelect }: Props) => {\r\n    return (\r\n        <div className=\"flex items-center gap-1.5 text-sm font-semibold\">\r\n            <div className=\"flex items-center gap-1.5 \">\r\n                {productType?.map((item) => (\r\n                    <button key={item?.title} onClick={() => onTabSelect(item?.title)}\r\n                        className={`border border-darkColor px-4 py-1.5 md:px-6 md:py-2 rounded-full  hover:bg-darkColor hover:text-white hoverEffect\r\n                    ${selectedTab === item?.title ? \"bg-darkColor text-white\" : \"bg-transparent text-darkColor\"}`}>\r\n                        {item?.title}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            <button className={`border border-darkColor p-2 rounded-full  hover:bg-darkColor hover:text-white hoverEffect`}><Repeat className=\"w-5 h-5\" /></button>\r\n        </div>\r\n    )\r\n}\r\nexport default HomeTabBar"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASA,MAAM,aAAa,CAAC,EAAE,WAAW,EAAE,WAAW,EAAS;IACnD,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BACV,kHAAA,CAAA,cAAW,EAAE,IAAI,CAAC,qBACf,8OAAC;wBAAyB,SAAS,IAAM,YAAY,MAAM;wBACvD,WAAW,CAAC;oBAChB,EAAE,gBAAgB,MAAM,QAAQ,4BAA4B,iCAAiC;kCACxF,MAAM;uBAHE,MAAM;;;;;;;;;;0BAO3B,8OAAC;gBAAO,WAAW,CAAC,yFAAyF,CAAC;0BAAE,cAAA,8OAAC,sMAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAG9I;uCACe"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2024-12-23'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId } from '../env'\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true, // Set to false if statically generating pages, using ISR or tag-based revalidation\n})\n"],"names":[],"mappings":";;;AAEA;AAFA;;;AAIO,MAAM,SAAS,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,6GAAA,CAAA,YAAS;IACT,SAAA,6GAAA,CAAA,UAAO;IACP,YAAA,6GAAA,CAAA,aAAU;IACV,QAAQ;AACV"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/components/ProductCard.tsx"],"sourcesContent":["const ProductCard = () => {\r\n    return (\r\n        <div>ProductCard</div>\r\n    )\r\n}\r\nexport default ProductCard"],"names":[],"mappings":";;;;;AAAA,MAAM,cAAc;IAChB,qBACI,8OAAC;kBAAI;;;;;;AAEb;uCACe"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sefea/Desktop/build/comfort/components/ProductGrid.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { productType } from \"@/constants/index\";\r\nimport HomeTabBar from \"./HomeTabBar\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { client } from \"@/sanity/lib/client\";\r\nimport { Product } from \"@/sanity.types\";\r\nimport ProductCard from \"./ProductCard\";\r\nconst ProductGrid = () => {\r\n    const [selectedTab, setSelectedTab] = useState(productType[0]?.title || \"\");\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const query = `*[_type == \"product\" && variant==$variant] | order(name asc)`;\r\n    const params = { variant: selectedTab.toLocaleLowerCase() };\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await client.fetch(query, params);\r\n                setProducts(await response);\r\n            } catch (error) {\r\n                console.log('Product fetching Error', error);\r\n\r\n            }\r\n            finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [selectedTab])\r\n    return (\r\n        <div className=\"mt-10 flex flex-col items-center\">\r\n            <HomeTabBar selectedTab={selectedTab} onTabSelect={setSelectedTab} />\r\n            {loading ? (\r\n                <div>\r\n                    <span>Product is loading...</span>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {products?.length ? (\r\n                        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 mt-10 w-full\">\r\n                            {\r\n                                products?.map((product: Product) => (<div key={product._id}>\r\n                                    <ProductCard product={product} />\r\n                                </div>\r\n                                ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p>No products</p>)}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default ProductGrid"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AAQA,MAAM,cAAc;IAChB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,kHAAA,CAAA,cAAW,CAAC,EAAE,EAAE,SAAS;IACxE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,QAAQ,CAAC,4DAA4D,CAAC;IAC5E,MAAM,SAAS;QAAE,SAAS,YAAY,iBAAiB;IAAG;IAC1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,WAAW;YACX,IAAI;gBACA,MAAM,WAAW,MAAM,uHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,OAAO;gBAC3C,YAAY,MAAM;YACtB,EAAE,OAAO,OAAO;gBACZ,QAAQ,GAAG,CAAC,0BAA0B;YAE1C,SACQ;gBACJ,WAAW;YACf;QACJ;QACA;IACJ,GAAG;QAAC;KAAY;IAChB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,yHAAA,CAAA,UAAU;gBAAC,aAAa;gBAAa,aAAa;;;;;;YAClD,wBACG,8OAAC;0BACG,cAAA,8OAAC;8BAAK;;;;;;;;;;qCAGV;0BACK,UAAU,uBACP,8OAAC;oBAAI,WAAU;8BAEP,UAAU,IAAI,CAAC,wBAAsB,8OAAC;sCAClC,cAAA,8OAAC,0HAAA,CAAA,UAAW;gCAAC,SAAS;;;;;;2BADqB,QAAQ,GAAG;;;;;;;;;yCAMlE,8OAAC;8BAAE;;;;;;;;;;;;;AAK3B;uCACe"}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}